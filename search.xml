<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Alg-雪花算法]]></title>
    <url>%2FAlg-%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Alg-雪花算法]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>雪花算法</tag>
        <tag>uuid</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-加密算法]]></title>
    <url>%2FAlg-%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Alg-加密算法]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>加密算法</tag>
        <tag>MD5</tag>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-KMP]]></title>
    <url>%2FAlg-KMP%2F</url>
    <content type="text"><![CDATA[Alg-KMP算法]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>KMP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[模板引擎]]></title>
    <url>%2F%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%2F</url>
    <content type="text"><![CDATA[模板引擎-FreeMarker、Thymeleaf jstl elFreeMarkerhttps://blog.csdn.net/xiangcaoyihan/article/details/80930179https://www.jianshu.com/p/20fd71b2e6a0 Thymeleafhttps://www.oschina.net/p/thymeleafhttps://www.jianshu.com/p/a842e5b5012e]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>模板引擎</tag>
        <tag>FreeMarker</tag>
        <tag>Thymeleaf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Netty]]></title>
    <url>%2FNetty%2F</url>
    <content type="text"><![CDATA[Netty-NIO异步通信框架 参考文章：https://blog.csdn.net/wangmx1993328/article/details/83036285https://blog.csdn.net/qq_27641935/article/details/86543578https://blog.csdn.net/zhiguozhu/article/details/50517551 aio bio niorpc]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>Netty</tag>
        <tag>NIO异步通信框架</tag>
        <tag>RPC</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 日志]]></title>
    <url>%2FJava%20%E6%97%A5%E5%BF%97%2F</url>
    <content type="text"><![CDATA[log4j slfj log4j1234log4j.rootLogger=DEBUG, stdoutlog4j.appender.stdout=org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.layout=org.apache.log4j.PatternLayoutlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n slfj]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>日志框架</tag>
        <tag>log4j</tag>
        <tag>slfj</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-杨辉三角]]></title>
    <url>%2FAlg-%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%2F</url>
    <content type="text"><![CDATA[小Q的歌单(牛客算法-杨辉三角) 小Q的歌单(牛客算法-杨辉三角)【题目描述】小 Q 有 X 首长度为 A 的不同的歌和 Y 首长度为 B 的不同的歌，现在小 Q 想用这些歌组成一个总长度正好为 K 的歌单，每首歌最多只能在歌单中出现一次，在不考虑歌单内歌曲的先后顺序的情况下，请问有多少种组成歌单的方法。 输入描述：每个输入包含一个测试用例。每个测试用例的第一行包含一个整数，表示歌单的总长度 K(1&lt;=K&lt;=1000)。接下来的一行包含四个正整数，分别表示歌的第一种长度 A(A&lt;=10)和数量 X(X&lt;=100)以及歌的第二种长度B(B&lt;=10)和数量 Y(Y&lt;=100)。保证 A 不等于 B。 输出描述：输出一个整数,表示组成歌单的方法取模。因为答案可能会很大,输出对 1000000007 取模的结果。输入示例：52 3 3 3 输出示例：9 解决方案：1234567891011121314151617181920212223242526272829//代码#include &lt;bits/stdc++.h&gt;using namespace std;long long c[105][105]; const int mod = 1000000007;void init() &#123; c[0][0] = 1; for (int i = 1; i &lt;= 100; i++) &#123; c[i][0] = 1; for(int j = 1; j &lt;= 100; j++) c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod; &#125;&#125;int main() &#123; int k, a, b, x, y; long long ans = 0; init(); scanf("%d", &amp;k); scanf("%d%d%d%d", &amp;a, &amp;x, &amp;b, &amp;y); for (int i = 0; i &lt;= x; i++) &#123; if (i * a &lt;= k &amp;&amp; (k - a * i) % b == 0 &amp;&amp; (k - a * i) / b &lt;= y) ans=(ans + (c[x][i] * c[y][(k - a * i) / b]) % mod) % mod; &#125; printf("%lld\n", ans); return 0;&#125; 总结1.分析数学模型(公式，杨辉三角…)2.使用编程语言实现]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>杨辉三角</tag>
        <tag>牛客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker]]></title>
    <url>%2FDocker%2F</url>
    <content type="text"><![CDATA[Docker入门 参考文章 https://mp.weixin.qq.com/s/T-yCJSOu_RMtg8nqMAmJfw 总结]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jetty]]></title>
    <url>%2FJetty%2F</url>
    <content type="text"><![CDATA[Jetty-架构、源码学习 参考文章：Jetty学习 https://my.oschina.net/tryUcatchUfinallyU/blog/110553Jetty服务器架构分析上(中、下) https://blog.csdn.net/lovingprince/article/details/6202669 Jetty Tomcat总结]]></content>
      <categories>
        <category>之初-服务器</category>
      </categories>
      <tags>
        <tag>Jetty</tag>
        <tag>架构</tag>
        <tag>源码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库事务]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[数据库事务并发控制和事务隔离级别 参考文章：https://blog.csdn.net/qq_33290787/article/details/51924963https://blog.csdn.net/baidu_37107022/article/details/75578140https://blog.csdn.net/wei_cheng18/article/details/82955068https://blog.csdn.net/weixin_30531261/article/details/79479895 数据库语言类型 数据查询语言（DQL）select 数据操作语言（DML） insert，update，delete主要用来对数据库的数据进行操作 数据库定义语言（DDL）create，alter，drop用在定义或改变表的结果，数据类型，表之间的链接和约束（操作是隐性提交的，不能rollback） 数据库控制语言（DCL）grant，deny，revoke设置或更改数据库用户或角色权限的语句 事务概念：满足ACID特性的一组DML操作，可以通过commit提交一个事务，也可以使用rollback进行回滚操作。 原子性（Atomicity）事务被视为不可分割的最小单元，所有操作要么全部提交成功，要么全部失败回滚。 一致性（Consistency）事务在执行前后都保持一致性状态，在一致性状态下，所有事务对一个数据的读取结果都是相同的； 隔离性（Isolation）事务所做的修改在最终提交以前，对其他事务是不可见的； 持久性（Durability）事务一旦提交则其所做的修改是永久的，即使系统发生崩溃，事务执行的结果也不会丢失。 只有满足一致性，事务的执行结果才是正确的；无并发的情况下，事务串行执行，隔离性一定能满足。此时只要满足原子性，就能满足一致性；在并发情况下，多个事务并行执行，事务不仅要满足原子性，还要满足隔离性，才能满足一致性；事务满足持久性是为了能应对数据库崩溃的情况。事务满足持久性是为了能应对数据库崩溃的情况。 mysql默认采用自动提交模式，也就是说如果不显示的使用start transaction语句来开启一个事务，那么每个查询都会被当做一个事务自动提交。 并发一致性问题 丢失修改：事务AB，AB均写入，A写的数据被B覆盖了。 读脏数据：事务A修改了一个数据，事务B读了数据，事务A撤销了修改，那么B读取的数据是脏数据；一个事务提交之前，人和其他事务不可读取器修改过的值，则可以避免此问题， 不可重复读：一个事务内，多次读同一数据，结果不一样。（重点在于修改）；如果只有在修改事务完全提交后才可以读取数据，则可以宾冕不可重复读。 幻读：事务A读取某一范围的数据，事务B插入了新的数据，事务A再次读取这个范围的数据，此时读取的结果和第一次结果不同。（重点在于增加或删除）；在操作事务完成处理数据之前，任何其他事务都不可以添加新数据，则可以避免。 封锁封锁粒度 行级锁和表级锁 应该尽量只锁定需要修改的部分数据，而不是所有资源，锁定的数据量越少，发生锁争用的可能就越小，并发程度越高； 加锁需要消耗资源，锁的各种操作会增加系统开销，因此封锁的粒度越小，系统开销越大，需要在开销和并发程度之间做一个权衡。 封锁类型 共享锁：也叫S锁，是一种读锁，当一个事务获得了一条数据的共享锁，其他事务也可以获得该共享锁，但不能获得排他锁，表示其他事务可读，但不可写。 排他锁：也叫X锁，是一种写锁，当一个事务对临界区加上排他锁，其他事务不能获得该临界区的任何锁（包括共享过和排他锁）表示只能一个人去处理数据，其他人不能读也不能写。 意向锁：使用意向锁可以更容易地支持多粒度封锁；存在行级锁和表级锁的情况下，事务T想对表A加排他锁，需要先检测是否有其他事务对表A或者表A的任意一行加了锁，那么需要对表A的每一行都检测一次，非常耗时；意向锁在原来的X/S锁上引入了IX/IS锁，都是表锁，用来表示一个事务想要在表中的某个数据行上加X锁或S锁，有以下两个规定：1.一个事务在获得某个数据行对象的S锁之前，必须先获得表的IS锁或者更强的锁；2.一个事务在获得某个数据行对象的X锁之前，必须先获得表的IX锁 引入意向锁，事务T想要对表A加X锁，只需要先检测是否有其他事务对表A加了X/IX/S/IS锁，如果加了就表示有其他的事务正在使用这个表或者表中某一行的锁，因此T加X锁失败。1.任意IS/IX锁之间是兼容的，因为他们只是表示想要对表加锁，而不是真正加锁；2.S锁子与S锁和IS锁兼容，也就是说事务T想要对数据加S锁，其他事务可以获得对表或者表中的行的S锁。 乐观锁：乐观锁假设认为数据一般情况下不会造成冲突，所以只会对数据进行提交更新的时候，才会正式对数据的冲突与否进行检测，如果冲突了，则返回用户错误的信息，让用户决定如何去做。实现乐观锁的两种方式：1.使用版本号，为数据增加一个版本标识，读数据时，将version一同读出，数据每更新一次对version加一，当提交更新时，判断数据表对应记录的版本信息与第一次读取出来的version值比对，如果相等，则予以更新，否则，认为是过期数据；2.使用时间戳：增加一个字段，使用时间戳，更新提交时检查当前数据库中数据的时间戳和自己更新前取到的时间戳对比，如果一致则OK，否则就是版本冲突。使用时间戳：增加一个字段，使用时间戳，更新提交时检查当前数据库中数据的时间戳和自己更新前取到的时间戳对比，如果一致则OK，否则就是版本冲突。 悲观锁：指的是是对数据被外界（本系统的其他事务，来自外部系统的事务处理）修改持保守的态度。在整个数据处理中，将数据处于锁定的状态；悲观锁的实现，要依靠数据库提供的锁机制。select status from t_items where id=1 for update，另一个事务会阻塞，如果没有for update则不会阻塞 MySQL InnoDB默认Row-Level Lock，只有明确的指定主键或者索引，才会执行Row lock，负责将会执行Table Lock 共享锁和排他锁都属于悲观锁 封锁协议1.三级封锁协议1)一级封锁协议：事务T要修改数据A时，必须加X锁，知道事务T结束才释放锁；可以解决丢失修改，因为不能同时有两个事务对同一个数据进行修改，那么事务的修改不会被覆盖；2)二级封锁协议：在一级的基础上，要求读取数据A时必须加S锁，读完马上释放S锁；可以解决脏读数据，因为如果一个事务在对数据A进行修改，根据一级等所协议，会加X锁，那么就不能再加S锁了，也就是不会读入数据；3)三级封锁协议：在二级的基础上，要求读取数据A时必须加S锁，直到事务结束才能释放S锁；可以解决不可重复读的问题，因为读A时，其他事务不能对A加X锁，从而避免了在读的期间数据发生改变。 2.两段锁协议：是指所有事务必须分为两个阶段对数据项加锁和解锁；1)对任何数据进行读写之前，要申请并获得对该数据的封锁；2)每个事务中，所有的封锁请求先于所有的解锁请求。 可串行化调度是指，通过并发控制，使得并发执行的事务结果与某个串行执行的事务结果相同。事务遵循两段锁协议是保证可串行化调度的充分条件，也就是说：所有事务均遵守两段锁协议，则这些事务的所有交叉调度都是可串行化的；一个可串行化的并发调度的所有事务并不一定都符合两段锁协议。 遵循两段锁协议可能发生死锁。 MySQL的InnoDB存储引擎采用两段锁协议，会根据隔离级别在需要的时候自动加锁，并且所有的锁都是在同一时刻被释放，这被称为隐式锁定。 select … lock in share mode; select … for update为显示锁定。 一次封锁法：要求事务必须一次性将所有要使用的数据全部加锁，否则就不能继续执行，因此一次封锁法遵守两端封锁协议，但两段封锁协议并不要求事务必须一次性将所有要使用的数据全部加锁。这是遵守两端锁协议仍可能发生死锁的原因所在 事务的隔离级别 读未提交：没有解决任何问题，在读取时不会加锁，在更新数据时，对其加行级共享锁（其他事务不能更改，但可以读取，导致脏读），事务结束时释放。 读已提交：读取的数据是已经提交成功的数据，解决了脏读的问题；给写数据加行级排他锁（写的过程是无法读取的，直到事务处理完毕才释放排他锁）读的数据加行级共享锁，读的时候也是无法写的，但是一旦读完该行就释放共享锁；（事务A负责读，B负责写，A读完数据后释放共享锁，B更新数据，事务还未结束，A在读，两次数据不一样。） 可重复读：可以重复的读取数据，解决了不可重复读的问题。写的数据加行级排他锁，事务结束释放，读的数据加行级共享锁，事务结束后释放。（事务A负责读，B负责写，A读完数据后等事务结束才释放共享锁，B更新数据，直到事务结束，A再读，两次读到的数据均为A第一次读到的数据，解决了不可重复读。）（事务A负责读，只为读取的数据加行级共享锁，B在A读的过程中向表单中插入数据，A由于处理判断到新的数据，产生幻读。） 可串行化：可以解决问题。事务一个接着一个执行，代价花费最高，性能最低。（事务读数据则加表级共享锁，事务写数据则加表级排他锁。） 多版本并发控制（MVCC）是MySQL的InnoDB存储引擎实现隔离级别的一种具体方式。用于实现提交度和可重复读这两种隔离解别。（未提交读隔离解别总是读最新的数据行，无需使用MVCC，可串行化隔离级别需要对所有读取的行都加锁，单纯使用MVCC无法实现）。 版本号： 系统版本号：一个递增的数字，每开始一个事务，系统版本号就会自动递增； 事务版本号：事务开始时的系统版本号。隐藏的列：MVCC在每行记录后面都保存着两个隐藏的列，用来存储两个版本号 创建版本号：指示创建一个数据行的快照时的系统版本号； 删除版本号：如果该快照的删除版本号大于当前事务版本号表示该快照有效，否则表示该快照已经被删除。 MVCC使用到的快照存储在Undo日志中，该日志通过回滚指针班一个数据行的所有快照连接起来； 实现过程当开始一个新的事务时，该事务的版本号肯定会大于当前所有数据行快照的创建版本号；1.select：多个事务必须读取到同一个数据行的快照，并且这个快照是距离现在最近的一个有效快照。但是也有例外，如果一个事务正在修改该数据行，那么它可以读取该事务本身所做的修改，而不用和其他事务的读取结果一致。一个没有对数据行做修改的事务T，它所读取的数据行快照的创建版本号必须小于T的版本号，因为如果大于等于则表示该数据行快照时其他事务的最新修改，因此不能去读取它；除此之外，T索要读取的数据行快照的删除版本号必须大于等于T的版本号，因为如果小于等于则表示该数据行快照是已经被删除的，不应该去读取它。2.insert：将当前系统版本号作为数据行快照的创建版本号；3.delete：将当前系统版本号作为数据行快照的删除版本号；4.update：将当前系统版本号作为更新前的数据行快照的删除版本号，并将当前系统版本号作为更新后的数据行快照的创建版本号。可以理解为先执行delete 后执行insert。 快照读与当前读1.快照读：使用MVCC读取的是快照中的数据，可以减少加锁带来的开销；select * from table…；1)快照读：一致非锁定读，select的时候会生成一个快照；2)生成快照的时机：事务中第一次调用select语句的时候才会生成快照，在此之前事务中执行的uodate, insert, delete操作都不会生成快照；3)READ COMMITED隔离解别下，每次读取都会重新生成一个快照，每次快照都是最新的，因此事务中每次select也可以看到其他已经提交事务所做的更改；REPEATED READ隔离级别下，快照会在事务中第一次select语句执行时生成，只有本事务中对数据进行更改才会更新快照，因此，只有第一次select之前其他已提交事务所做的更改可以看到，但是如果已经执行了seletc，那么其他事务commit数据，select是看不到的。 2.当前读：读取的是最新的数据，需要加锁；select from table where ? lock in share mode;select from table where ? for update;insert;update;delete; InnoDB如何解决幻读问题？MVCC、next-key lock、间隙锁 Record Locks（记录锁）锁定一个记录上的索引，而不是记录本身，如果没有设置索引，InnoDB会自动在主键上创建隐藏的聚簇索引，因此Record Locks依然可以使用； Gap Locks（间隙锁）锁定索引之间的间隙，但是不包含索引本身。例如当一个事务执行以下语句，其他事务就不能再t.c中插入15，select c from t where c between 10 and 20 for update; Next-key Locks是记录锁和间隙锁的结合，不仅锁定一个记录上的索引，也锁定索引之间的间隙。例如一个索引包含以下值：10,11,13,20，那么就需要锁定以下区间(负无穷, 10], (10, 11], (11, 13], (13, 20], (20, 正无穷) InnoDB默认的隔离级别是RR（可重复读），不能解决幻读；MVCC+next-key lock可以解决幻读的问题。（快照读即一般的select靠MVCC解决幻读）（当前读select … for update, select … lock in share mode; insert …; update …; delete …依赖于间隙锁解决）1)间隙锁的主要作用是为了防止出现幻读，会把锁定的方位扩大。控制间隙锁的参数是innodb_locks_unsafe_for_binlog 这个参数的默认值是off，也就是启用间隙锁。2)行锁（record lock）和间隙锁组合起来叫做next-key lock，锁定一个范围，并且锁定记录本身，主要目的是解决幻读的问题。行锁（record lock）和间隙锁组合起来叫做next-key lock，锁定一个范围，并且锁定记录本身，主要目的是解决幻读的问题。 1.间隙锁防止间隙内有数新数据被插入；防止已存在的数据，更新成间隙内的数据；2.InnoDB自动使用间隙锁的条件：必须在RR级别下，检索条件必须有索引。 举一个例子:id(主键) 1 3 6 8 10 13number(二级索引)2 4 5 5 5 11 mysql&gt; show create table test\G;*** 1. row *** Table: testCreate Table: CREATE TABLE test ( id int(11) NOT NULL, number int(11) DEFAULT NULL, PRIMARY KEY (id), KEY number (number)) ENGINE=InnoDB DEFAULT CHARSET=utf8 案例： session 1:start transaction ;select * from test where number=4 for update; session 2:start transaction;insert into test value(0,2);#（执行成功）insert into test value(2,2);#（阻塞）insert into test value(2,4);#（阻塞）insert into test value(2,2);#（阻塞）insert into test value(4,4);#（阻塞）insert into test value(4,5);#（阻塞）insert into test value(7,5);#（执行成功）insert into test value(9,5);#（执行成功）insert into test value(11,5);#（执行成功）]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>事务</tag>
        <tag>并发控制</tag>
        <tag>隔离级别</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Volatile]]></title>
    <url>%2FVolatile%2F</url>
    <content type="text"><![CDATA[参考文章：https://mp.weixin.qq.com/s/kQ498ifh4OUEDd829JIhnQ Volatile]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>Volatile</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[乐观锁悲观锁]]></title>
    <url>%2F%E4%B9%90%E8%A7%82%E9%94%81%E6%82%B2%E8%A7%82%E9%94%81%2F</url>
    <content type="text"><![CDATA[乐观锁 悲观锁 参考文章：https://mp.weixin.qq.com/s/4RKQMA4yF5u7jN9BtS8x_Qhttps://blog.csdn.net/qq_34337272/article/details/81072874https://bestzuo.cn 乐观锁悲观锁]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>乐观锁</tag>
        <tag>悲观锁</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见设计模式]]></title>
    <url>%2F%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[常见的三种设计模式(单例模式，工厂模式，策略模式) 单例模式 参考文章 https://mp.weixin.qq.com/s/Yy_KW35Ndlb5v6hQ30_lGQ 工厂模式 策略模式]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>常见设计模式</tag>
        <tag>单例模式</tag>
        <tag>工厂模式</tag>
        <tag>策略模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jackson]]></title>
    <url>%2FJackson%2F</url>
    <content type="text"><![CDATA[Java常用Json库性能比较 参考文章 https://mp.weixin.qq.com/s/Z1u8ERiLPUCz0fR_3ApaiA Demo实践Jackson(Eclipse-&gt;云盘)]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Jackson</tag>
        <tag>Json库性能比较</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[内存对齐]]></title>
    <url>%2F%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90%2F</url>
    <content type="text"><![CDATA[参考文章 https://blog.csdn.net/weixin_40853073/article/details/81451792]]></content>
      <categories>
        <category>之初-Others积累</category>
      </categories>
      <tags>
        <tag>内存对齐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-洗牌算法优化]]></title>
    <url>%2FAlg-%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[数组Card [n=53] 随机产生下标[0..n=53]n– 缩小范围 0 1 2 .. rand .. n ..每产生一张牌 Card[rand] Card[n–]]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>洗牌算法优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx]]></title>
    <url>%2FNginx%2F</url>
    <content type="text"><![CDATA[Nginx配置 (待补充：e^3) 端口 IP 分布式 Nginx配置示例1234567891011121314151617181920212223242526272829303132333435363738394041/*worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; #gzip on; server &#123; listen 9090; server_name localhost; location / &#123; root html; index index.html index.htm; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125; upstream jml&#123; server 192.168.139.1:8180; server 192.168.139.1:8280; server 192.168.139.1:8380; &#125; server &#123; listen 8080; server_name localhost; location / &#123; proxy_pass http://192.168.139.1:8180; index index.jsp index.html index.htm; &#125; &#125;&#125; */ 反射去除null字段123456789101112131415161718192021222324252627282930313233343536373839404142public class ReflectUtils &#123; /*获取类的字段*/ public static String getField(Object o) &#123; Field[] fields = o.getClass().getDeclaredFields(); StringBuffer sb = new StringBuffer(); for (Field f : fields ) &#123; //允许操作属性 f.setAccessible(true); sb.append(f.getName() + ","); &#125; return sb.substring(0,sb.length()-1); &#125; /*去除没有值的字段*/ public static Map filterEmptyValue(Object o)&#123; Map map = new HashMap(); Field[] fields = o.getClass().getDeclaredFields(); StringBuffer sb = new StringBuffer(); for (Field f : fields ) &#123; //允许操作属性 f.setAccessible(true); try &#123; if (f.get(o) != null)&#123; Object value = f.get(o); if (!StringUtils.isNullOrEmpty(value.toString()))&#123; map.put(f.getName(),value); &#125; &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; return map; &#125; public static void main(String[] args) &#123; User user = new User(); user.setAge(18); System.out.println(ReflectUtils.getField(user)); System.out.println(ReflectUtils.filterEmptyValue(user)); &#125;&#125;]]></content>
      <categories>
        <category>之初-服务器</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A-学习清单]]></title>
    <url>%2FA-%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95%2F</url>
    <content type="text"><![CDATA[计划]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-Tree]]></title>
    <url>%2FAlg-Tree%2F</url>
    <content type="text"><![CDATA[Tree相关算法汇总 B+ B-树 二叉平衡树 红黑树 二叉排序树1.定义(动态) 2.搜索算法 2.1 return p=非空|null; 2.2return p=非空|f(父结点) 3.插入算法 4.删除算法( * p ) 4.1p为叶子结点：直接删除 4.2p只有一个孩子结点：上移 4.3p有两个孩子结点:a,b 遍历 非递归遍历二叉树 递归遍历二叉树 查找]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Tree</tag>
        <tag>有道云笔记迁移</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-排序]]></title>
    <url>%2FAlg-%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[排序算法汇总 1.冒泡排序12345678910111213141516171819202122232425262728293031323334/*未优化(某一趟两两比较结束, 未发生元素移动,则r[0..i]为有序序列，终止程序)void BubbleSort(int[] r) &#123; // r[0..n-1] int n = r.length; // n-1 趟 // 1 . i . n-1 // 0 1 2 . . n-1 // 0 . j for(int i=n-1; i&gt;=1; i--) &#123; for(int j=0; j&lt;i; j++)&#123; if(r[j] &gt; r[j+1]) r[j] &lt;--&gt; r[j+1]; &#125; &#125;&#125;// 优化for (int i = n-1, change = true; i &gt;= 1 &amp;&amp; change; i--) &#123; change = false; for (int j = 0; j &lt; i; j++)&#123; if(r[j] &gt; r[j+1]) &#123; r[j] &lt;--&gt; r[j+1]; change = true; &#125; &#125;&#125;*/ 2.快速排序123456789101112131415161718192021222324252627282930313233/*void QSort (int[] r, int low, int high)&#123; if (low &lt; high) &#123; int pivotloc = Partition (r, low, high); QSort (r, low, pivotloc-1); QSort (r, pivotloc+1, high); &#125;&#125;int Partition (int[] r, int low, int high) &#123; r[0] = r[low]; // 1 3 2 #4# 5 6 4 // 4 1 3 2 4 6 4 // 1 3 2 #4# 4 6 4 !!! // 4 6 4 return low=high=1; // QSort(r,low=1,p-1)退出low=high // QSort(r,p+1,high=3) 6 4排序完成 while (low &lt; high) &#123; // low &lt; high ! while (low &lt; high &amp;&amp; r[high] &gt;= r[0]) high--; r[low] = r[high]; while (low &lt; high &amp;&amp; r[low] &lt;= r[0]) low++; r[high] = r[low]; &#125; r[low] = r[0]; return low;&#125;*/ 3.堆排序1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/*以非递减排序为例：建立大顶堆,调整时堆顶-&gt;h[n--]数组h[1..n]-&gt;完全二叉树不同层间元素：整体有序同一层间元素：先后无序最后一个非终结结点 i=floor[n/2]新建堆：自底向上 h[1..i] i--(i&gt;0)调整堆：自上向下 h[1..j-1] j=n; (j&gt;1); j--; h[1]&lt;--&gt;h[j] HeapAdjust(h,1,j-1)void HeapAdjust(int[] h, int s, int m) &#123; rc = h[s]; // 调整 s,自上而下找出大元素 for (j = s*2; j &lt;= m; j*=2) &#123; // 求max(左孩子，右孩子) // 左右结点相等[!无影响!] // j &lt; m !!! if (j &lt; m &amp;&amp; h[j] &lt; h[j+1]) j++; // 堆顶 &amp; max 比较 // h[s]为最大元素,break; // 否则交换元素,下轮比较 if (h[s] &gt;= h[j]) break; // 处理方式一：互换元素 // h[s] &lt;--&gt; h[j]; // 处理方式二：rc暂存h[s] h[s] = h[j]; // 向下深一层 // 切换堆顶元素,后续比较 s = j; &#125; h[s] = rc;&#125;void HeapSort(int[] h) &#123; // 新建堆 // 每个非终端结点(层层向上) // max,即当前层&gt;=all下方元素 for (int i = h.length / 2; i &gt; 0; i--) &#123; HeapAdjust(h,i,h.length); &#125; // 调整堆 // 大堆顶移至尾部, // 尾部元素移至堆顶, // 调整堆找出次大元素 for (int j = h.length; j&gt;1; j--) &#123; h[1] &lt;--&gt; h[j]; HeapAdjust(h,1,j-1); &#125;&#125;*/ 4.直接插入排序1234567891011121314151617181920212223242526272829303132/*void insertSort(int[] r)&#123; // n-1 趟 for (int i = 2; i &lt;= r.length; i++)&#123; if (r[i] &lt; r[i-1])&#123; r[0] = r[i]; r[i] = r[i-1]; for (int j = i-2; r[0] &lt; r[j]; --j)&#123; r[j+1] = r[j]; &#125; r[j+1] = r[0]; &#125; &#125;&#125;时间复杂度分析(非递增排序)比较次数：[i=2..n]∑i (n+2)(n-1)/21次 ：r[i] &amp; r[i-1]i-1次：r[0] &amp; r[1..i-1]移动次数：[i=2..n]∑(i+1) (n+4)(n-1)/21次 ：r[i] -&gt; r[0]i-1次：r[1..i-1] 后移1次 ：r[0] -&gt; r[j+1]*/ 5.折半插入排序12345678910111213141516171819202122232425262728293031/*关于二分查找适用有序查找low high最终指向同一个元素至 high &lt; low 结束3 4 4 6 7 &amp; 44 4 5 6 74 5 6 74 6 7void BInsertSort(int[] r) &#123; for (i = 2; i &lt;= r.length; i++) &#123; r[0] = r[i]; low = 1; high = i-1; while (low &lt;= high) &#123; m = (low + high) / 2; // &lt; &amp; &lt;= &amp; r[high+1]=r[0]区别 if(r[0] &lt; r[m]) high = m-1; else low = m+1; &#125; /* * high=m-1 low ：r[0]&lt;r[m] * high low=m+1 ：r[0]&gt;=r[m] */ for (j = i-1; j &gt;= high+1; j--) r[j+1] = r[j]; r[high+1] = r[0]; &#125;&#125;*/ 6.归并排序(2-路归并)12345678910111213141516171819202122232425262728293031/*思路：SR[] TR[] 辅助空间void MSort(int s, int t) &#123; // s,m,t if (s == t) TR[s] = SR[t]; // 必须有else,s=t时后续不执行 else &#123; m = (s + t) / 2; MSort(s, m); MSort(m+1, t); Merge(s, m, t); &#125;&#125;void Merge(int i,int m,int n) &#123; // 类似链表合并 // k -&gt; TR[k] // i .. m m+1 .. t // j for (j = m + 1, k = i; i &lt;= m &amp;&amp; j &lt;= n; k++) &#123; if(SR[i] &lt;= TR[j]) TR[k] = SR[i++]; else TR[k] = SR[j++]; &#125; if(i&lt;=m) TR[k..n] = SR[i..m]; if(j&lt;=n) TR[k..n] = SR[j..n];&#125;*/ 选择排序123456/**/ 希尔排序123456/* 增量问题*/]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>有道云笔记迁移</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS入门]]></title>
    <url>%2FCSS%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[外边距 margin :邻接(非包含关系)元素位置关系内边距 padding:内外元素边距span标签 被用来组合文档中的行内元素 这是原始引用样式 1234567891011121314151617&lt;!-- 左侧图片，右侧上下文字 --&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;body&gt; &lt;div&gt; &lt;div style="float: left; width: 4%; "&gt; &lt;img src="https://Dxoca.cn/image/headPortrait.jpg" width="64px" height="64px" alt="fail" /&gt; &lt;/div&gt; &lt;div style="float: right; width: 96%; " &gt; &lt;div style="padding-left: 5px; "&gt; &lt;a href="https://Dxoca.cn"&gt;Dxoca's blog xxxxx&lt;/a&gt; &lt;/div&gt; &lt;p&gt;yyyyyy&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 12// css注释方法为 / *. . .* /// 不要加script标签 在css中类型连用123.aclass .bclass &#123; color: #0000ff;&#125; /*同时包含ab类型时c,olor被设置为#0000ff*/]]></content>
      <categories>
        <category>之初-前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[meta标签和referrer策略]]></title>
    <url>%2Fmeta%E6%A0%87%E7%AD%BE%E5%92%8Creferrer%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[HTML meta标签 and 图片加载问题 注意：引用&quot;&gt;&quot;,换行后内容仍在此引用内，结束引用需间隔一行 myblockquote使用时,所有内容必须(不能手动换行,否则html显示时会多出&lt;br&gt;) &lt;font size=&quot;12px&quot;&gt; &lt;p style=&quot;font-size: 13px;&quot;&gt; p标签内字体大小设置无效 图片加载问题12&lt;!-- 添加上图片加载正常，但是网站底部统计数据无法显示 --&gt;&lt;meta name="referrer" content="no-referrer" /&gt; meta标签使用 相关内容：referrer策略和meta标签的问题原文地址：https://segmentfault.com/a/1190000017896469参考文章：https://blog.csdn.net/ccfxue/article/details/53119936]]></content>
      <categories>
        <category>之初-前端</category>
      </categories>
      <tags>
        <tag>meta</tag>
        <tag>referrer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github更多功能]]></title>
    <url>%2FGithub%E6%9B%B4%E5%A4%9A%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[Github-之前没用过的功能 Project项目管理(进度,bugs,待办事项优先级…) Wiki文档(某一仓库下使用,clone至本地后为.md文件)Home(Welcome/说明)Title(文档内容)Sidebar(侧边栏/目录)]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Project</tag>
        <tag>Wiki</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docsifyjs]]></title>
    <url>%2Fdocsifyjs%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%2F</url>
    <content type="text"><![CDATA[文档生成工具-Docsifyjs 相关链接官方文档：A magical documentation site generator. https://docsify.js.orgdocsify项目clone：https://github.com/docsifyjs/docsify托管至CODING： https://coding.net]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Docsifyjs</tag>
        <tag>docsify</tag>
        <tag>文档生成工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Next 博客历程]]></title>
    <url>%2FHexo%2BNext%E5%8D%9A%E5%AE%A2%E5%8E%86%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[注释快捷键：Ctrl+/Hexo-Next主题自定义参考文章Best https://bestzuo.cnhttps://bestzuo.cn/posts/blog-establish.htmlhttps://www.jianshu.com/p/9f0e90cc32c2https://io-oi.mehttps://www.canye365.cn Gemini持续优化ing…00.&nbsp;CDN加速https://bestzuo.cn https://canye365.cn00.&nbsp;NexT v6 and v7 (主题更新?)https://theme-next.org https://github.com/theme-next/hexo-theme-next00.&nbsp;page-友链 页自定义css(图文链接-友链) 桌面.css提取 00.&nbsp;相册功能 https://me.idealli.com/post/73ad4183.html00.&nbsp;Fancybox00.&nbsp;hexo代码高亮支持的语言???00.&nbsp;界面待优化(热门文章、评论,gif悬挂样式b2t,代码复制按钮)：https://bestzuo.cn/links/00.&nbsp;上传图片到服务器(阿里云-OSS,腾讯云-COS,微博,七牛…)https://lushuaiyu.com/2019/01/01/typora-iPic-方便的上传图片到服务器(for%20mac)/00.&nbsp;hexo-toc00.&nbsp;天气功能00.&nbsp;部署平台转移国内00.&nbsp;鼠标移过元素(摘要)过滤动画 https://findcatsname.com/cats-do-know-their-own-names00.&nbsp;404页面 Bing: https://cn.bing.com/xxx00.&nbsp;“复制”按钮位置01.&nbsp;keyword搜索引擎收录02.&nbsp;图片摘要大小(原始尺寸)04.&nbsp;Valine评论权限和(default)头像05.&nbsp;评论区焦点触发 显示/隐藏 GIF图片06.&nbsp;Gitalk评论系统07.&nbsp;动态背景.js08.&nbsp;背景图片轮换09.&nbsp;浮动小人儿-Live2d https://www.hojun.cn00.&nbsp;Docsify使用00.&nbsp;CODING托管00.&nbsp;typecho-handsome主题00.&nbsp;Google 广告接入,,, 错误处理 3.友链page：请求太多,服务器拒绝请求(异步？) 2.链接头像(meta name=”referrer” content=”no-referrer”/) 1.TypeError: Cannot set property ‘lastIndex’ of undefinedat highlight (D:\hexo\Blog\node_modules\highlight.js\lib\highlight.js:577:35)解决：修改配置文件_config.yml(注意不是主题里面的配置文件！) 把auto_detect设置为false,即可解决 功能添加 11.摘要过滤动画 (待完成…) 123456789.btn-share &#123; transition: all 0.3s;&#125;.btn-share:hover &#123; transform: scale(1.3);&#125;/*transition定义的是过渡动画效果时间，transform定义的是放大的倍数。而 :hover 则定义鼠标滑过事件。*/ 10.b2p(back to top)返回顶部按钮在手机上显示,header-inner与屏幕边缘保持间距,隐藏Github-svg图标链接 1234567891011121314@media (max-width: 767px) .back-to-top &#123; display: block; /*手机端显示b2t按钮*/* &#125; .header-inner &#123; position: relative; width: 98%; /* 与屏幕边缘保持间距 */ border-radius: 10px; /* */ &#125; .headband &#123; display: none; /*隐藏Github-svg图标链接*/ &#125; 但是b2t样式设置无效,采用下述方法： 123456789101112131415161718192021222324252627/* 进入文件css-common-componments-back-to-top.styl 屏蔽：固定&amp;&amp;隐藏按钮 fixbutton()和hide() Next主题配置文件：(maybe修改onmobile属性为true即可&lt;Muse|Mist&gt;,感兴趣的可以试下) # Enable sidebar on narrow view (only for Muse | Mist). onmobile: false*//* ...... +tablet() &#123; //fixbutton() if hexo-config('sidebar.onmobile'); //hide() if not hexo-config('sidebar.onmobile'); &#125; +mobile() &#123; //fixbutton() if hexo-config('sidebar.onmobile'); //hide() if not hexo-config('sidebar.onmobile'); &#125; &amp;.back-to-top-on &#123; bottom: $b2t-position-bottom-on; &#125;&#125;*/ 9.tagcloud 渐变色 修改文件：/themes/next/layout/page.swig1&#123; &#123; tagcloud(&#123;min_font: 13, max_font: 31, amount: 1000, color: true, start_color: '#e55d87', end_color: '#5fc3e4'&#125;) &#125; &#125; 修改对应参数值即可，参数说明见Hexo官方文档，颜色可以参考这个网站。 8.Live-2d模型 https://www.zhangxinxu.com/wordpress/2018/05/live2d-web-webgl-js/https://huaji8.top/post/live2d-plugin-2.0/https://blog.csdn.net/appleyuchi/article/details/91882571https://www.jianshu.com/p/3a6342e16e57https://www.jianshu.com/p/4b61d8702cfa 7.footer评论回复 温馨提示 1) css修改css\_common\componments\footer\footer.styl -&gt; color: #D2B48C2) 在next\layout\_partials\comments.swig末尾处添加12345678 &#123;% elseif theme.valine.appid and theme.valine.appkey %&#125; &lt;div class="comments" id="comments"&gt; &lt;/div&gt; &lt;div class="comments-warn"&gt;温馨提示：评论系统使用的是Gravatar头像,正确填写邮箱是可以收到评论回复的哦 @( ◕ x ◕ )@ &lt;/div&gt; &#123;% endif %&#125;&#123;% endif %&#125; 3) VIP: 屏幕尺寸变化(响应式布局)时,评论区样式出错(内容区域宽度大于评论区),反复查找css目录关于.comments样式只找到一处,即2)中\css\_common\components\comments.styl,因此采用用户定义样式覆盖原样式(在浏览器中调节屏幕宽度,从而得出合适参数)media放在此处不生效12345678910111213141516171819202122/*原样式*/.comments &#123; margin: 60px 20px 0; &#125;/*温馨提示*/.comments-warn &#123; color: #00FF7F; margin-top: 6px; text-align: center;&#125;/*自定义覆盖原样式,浏览器调试得出合适参数.comments之前一定要有缩进,否则报错ParserError: expected "indent(缩进)", got "."@media (max-width: 767px) .comments &#123; margin-top: 10px; // 8 -&gt; 10 padding: 0 12px; &#125;*/ @media放在css\_custom\custom.style下方生效,(自闭了。。。PC端OK,移动端BuG啦 i) 最终完美解决方案：https://zhichuwy.cn/friends 12345@media (max-width: 767px) .comments &#123; margin-top: 10px; /* 8 -&gt; 10 */ padding: 0 12px; &#125; 6.Sidebar运行时长 1) 文件位置：/themes/next/layout/_custom/sidebar.swig(Date改为自己的哦！)123456789101112131415161718192021222324252627282930313233343536&lt;div id="days"&gt;&lt;/div&gt;&lt;script&gt;function show_date_time()&#123; window.setTimeout("show_date_time()", 1000*3600); &#123;### 定时函数 单位ms ###&#125; BirthDay=new Date("mm/dd/yyyy hh:mm:ss"); today=new Date(); timeold=(today.getTime()-BirthDay.getTime()); sectimeold=timeold/1000 secondsold=Math.floor(sectimeold); msPerDay=24*60*60*1000 e_daysold=timeold/msPerDay daysold=Math.floor(e_daysold); e_hrsold=(e_daysold-daysold)*24; hrsold=setzero(Math.floor(e_hrsold)); document.getElementById('days').innerHTML="已运行 "+daysold+" 天 "+hrsold+" 小时"; &#123;### e_minsold=(e_hrsold-hrsold)*60; ###&#125; &#123;### minsold=setzero(Math.floor((e_hrsold-hrsold)*60)); ###&#125; &#123;### seconds=setzero(Math.floor((e_minsold-minsold)*60)); ###&#125; &#123;### document.getElementById('days').innerHTML= ### &#123;### "已运行 "+daysold+" 天 "+hrsold+" 小时 "+minsold+" 分 "+seconds+" 秒"; ###&#125;&#125;function setzero(i) &#123; if (i&lt;10) &#123; i="0" + i &#125;; return i;&#125;show_date_time();&lt;/script&gt; 2) 修改 /themes/next/layout/_macro/sidebar.swig(一样的不用修改)1234567891011121314151617181920 &#123;# Blogroll #&#125; &#123;% if theme.links %&#125; &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.links_layout | default('inline') &#125;&#125;"&gt; &lt;div class="links-of-blogroll-title"&gt; &lt;i class="fa fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"&gt;&lt;/i&gt; &#123;&#123; theme.links_title &#125;&#125; &lt;/div&gt; &lt;ul class="links-of-blogroll-list"&gt; &#123;% for name, link in theme.links %&#125; &lt;li class="links-of-blogroll-item"&gt; &lt;a href="&#123;&#123; link &#125;&#125;" title="&#123;&#123; name &#125;&#125;" target="_blank"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125; &lt;/ul&gt; &lt;/div&gt; &#123;% endif %&#125;+ &#123;% include '../_custom/sidebar.swig' %&#125; &lt;/div&gt; &lt;/section&gt; 3) 自定义样式： /blog/themes/next/source/css/_custom/custom.styl1234567/* 自定义的侧栏时间样式 */#days &#123; display: block; color: rgb(7, 179, 155); font-size: 13px; margin-top: 15px;&#125; 5.页面右上角Github图标 Corners：http://tholman.com/github-corners/ [推荐]Ribbons：https://blog.github.com/2008-12-19-github-ribbons/ 编辑themes/next/layout/_layout.swig在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;后面加入下方内容(注意：把href改为自己的Github地址)1&lt;a href="https://your-url" class="github-corner" aria-label="View source on GitHub"&gt;&lt;svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"&gt;&lt;path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"&gt;&lt;/path&gt;&lt;path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"&gt;&lt;/path&gt;&lt;path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt; 4.评论回复邮件提醒 Valine 评论系统中的邮件提醒设置1234567891011121314/*1) 设置Leancloud：进入Leancloud-&gt;选择你的评论所存放的应用-&gt;设置-&gt;邮件模板,按下图设置好用于重置密码的邮件主题&gt;然后保存:&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;/p&gt;&lt;p&gt;你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：&lt;/p&gt;&lt;p&gt;&lt;a href="你的网址首页链接" style="display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;"&gt;马上查看&lt;/a&gt;&lt;/p&gt;2) 初始化Valine：设置Valine的notify为true即可打开邮件提醒。v1.1.4-rc以后的版本支持。注意：发送次数过多，可能会暂时被Leancloud 屏蔽邮件发送功能注意：由于邮件提醒功能使用的Leancloud的密码重置邮件提醒，只能传递昵称、邮箱两个属性，所以邮件提醒链接无法直达指定文章页。请悉知。*/ 3.网页标题崩溃搞怪特效 1) 先创建一个js文件crash_cheat.js,然后把文件放到source文件夹的js文件夹的src里面2) 在hexo\themes\next\layout文件路径找到_layout.swig文件,在body或head之间加入/js/src/crash_cheat.js1234//写作时,非代码部分注意路径书写,标签书写...//破坏格式(路径前加~, 标签不加&lt;&gt;, 否则会被错误解析成link和不完整的代码导致无法正常显示)//javascript注释方法为 / / / * * / 注意:js文件中不要加script标签 1234567891011121314151617181920212223242526272829303132var OriginTitle = document.title;var titleTime;document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; document.title = '╭(°A°`)╮ 页面崩溃啦 ~'; clearTimeout(titleTime); &#125;else &#123; document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125;&#125;); &lt;!--崩溃欺骗(包含图标改变)--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "https://i.loli.net/2018/08/24/5b7fcb00ed9bf.png"); document.title = '怎么回事╭(°A°`)╮'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "https://i.loli.net/2018/09/25/5baa4f21661e7.png"); document.title = '小老弟(ฅ&gt;ω&lt;*ฅ)'; titleTime = setTimeout(function () &#123; document.title = OriginTitle; $('[rel="icon"]').attr('href', "/images/favicon-32x32-next.png"); &#125;, 2000); &#125; &#125;); 2.代码复制功能 1) 下载 clipboard.min.js,拷贝到\themes\next\source\js\src目录下2) 在\themes\next\source\js\src目录下，创建clipboard-use.js,文件内容如下:1234567891011121314151617/*页面载入完成后，创建复制按钮*/!function (e, t, a) &#123; /* code */ var initCopyCode = function()&#123; var copyHtml = ''; copyHtml += '&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'; copyHtml += ' &lt;i class="fa fa-globe"&gt;&lt;/i&gt;&lt;span&gt;复制&lt;/span&gt;'; copyHtml += '&lt;/button&gt;'; $(".highlight .code pre").before(copyHtml); new ClipboardJS('.btn-copy', &#123; target: function(trigger) &#123; return trigger.nextElementSibling; &#125; &#125;); &#125; initCopyCode();&#125;(window, document); 3) 在\themes\next\source\css\_custom\custom.styl样式文件中添加下面代码:1234567891011121314151617181920212223242526272829303132333435363738/*代码块复制按钮*/.highlight &#123; position: relative; /*方便copy代码按钮（btn-copy）的定位*/&#125;.btn-copy &#123; display: inline-block; cursor: pointer; background-color: #eee; background-image: linear-gradient(#fcfcfc,#eee); border: 1px solid #d5d5d5; border-radius: 3px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-appearance: none; font-size: 13px; font-weight: 700; line-height: 20px; color: #333; -webkit-transition: opacity .3s ease-in-out; -o-transition: opacity .3s ease-in-out; transition: opacity .3s ease-in-out; padding: 2px 6px; position: absolute; right: 5px; top: 5px; opacity: 0;&#125;.btn-copy span &#123; margin-left: 5px;&#125;.highlight:hover .btn-copy&#123; opacity: 1;&#125; 4) 添加引用,在\themes\next\layout\_layout.swig文件末尾或body结束标签之前添加123&lt;!-- 代码块复制功能 --&gt; &lt;script type="text/javascript" src="/js/src/clipboard.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/clipboard-use.js"&gt;&lt;/script&gt; 1.页面点击出现桃心 1) 在\themes\next\source\js\src下新建文件love.js文件,代码如下:1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125; &#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125; &#125;(),n()&#125;(window,document); 2) 修改themes\next\layout\_layout.swig,在&lt;body&gt;&lt;/body&gt;标签里添加:12&lt;!-- 爆炸红心效果 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 美化 css线性渐变margin负值 https://www.jianshu.com/p/549aaa5fabaa 1234@media (max-width: 767px).header &#123; background-image: linear-gradient(90deg,#f79533 0,#f37055 15%,#ef4e7b 30%,#a166ab 44%,#5073b8 58%,#1098ad 72%,#07b39b 86%,#6dba82 100%)!important; &#125; 10.关于css样式调整总结 css\_schemes\Gemini\index.styl定义了++tablet(&gt; 768px &amp; &lt; 991px) +mobile(&lt; 768px)相当于@media因此,之前在custom.styl和其他文件中定义的media相关代码可转化为在common组件 or schemes下做相应修改 1.&nbsp;首先熟悉Hexo文件目录结构,了解各component的名称2.&nbsp;通过浏览器定位元素3.&nbsp;修改样式 如: 摘要内容与上方Title距离过大,需进行像素调整。浏览器定位元素css .posts-expand .post-meta {},尝试查看css目录文件找到\css\_common\componments\post\post-meta.styl 9.关于\css\_schemes各主题文件夹需和\css\_variables配合使用 8.背景图片和透明效果 文件位置：themes\next\source\css\ _custom\custom.styl123456789101112131415161718192021222324/*添加背景图片*/body &#123; background: url(/images/421.jpg); background-repeat: no-repeat; background-attachment: fixed; background-position: 50% 50%; background-size: cover;/*占满屏幕*/&#125;/*修改不透明度*/.main-inner &#123; opacity: 0.95;&#125;/*首页文章阴影样式*/.post &#123; -webkit-box-shadow: 0 0 14px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 14px rgba(202, 203, 204, .5); /*页面右侧内容加载完成前 阴影会有棱角*/ border-radius: 10px;&#125; 内容透明themes\next\source\css\_schemes\Pisces\_layout.styl文件.content-wrap标签下background: white修改为：background: rgba(255,255,255,0.9); //0.9是透明度 菜单栏背景themes\next\source\css\_schemes\Pisces\_layout.styl文件.header-inner标签下background: white修改为：background: rgba(255,255,255,0.9); //0.9是透明度 站点概况背景themes\next\source\css\_schemes\Pisces\_sidebar.styl文件.sidebar-inner标签下background: white修改为：background: rgba(255,255,255,0.9); //0.9是透明度 然后修改themes\next\source\css\_schemes\Pisces\_layout.styl文件.sidebar标签下background: $body-bg-color修改为：background: rgba(255,255,255,0.9); //0.9是透明度 按钮背景themes\next\source\css\_common\components\post\post-button.styl添加代码background: transparent; 卡片圆角化,透明后直角棱角会显示出来,将直角的棱角隐藏themes\next\source\css\_schemes\Pisces\_sidebar.styl文件.sidebar标签下添加代码background: rgba(255,255,255,0.01); 参考文章：https://www.jianshu.com/p/30bf702f533chttps://www.jianshu.com/p/efbeddc5eb19 7.圆形头像并旋转 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263/*author 头像样式设置*/.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 6.底部红心跳动 1) 编辑主题配置文件:icon: heart2) 编辑 /themes/next/source/css/_custom/custom.styl123456789101112131415/* 自定义页脚跳动的心样式 */@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 80, 80);&#125; 3) 编辑 /themes/next/layout/_partials/footer.swig12- &lt;span class="with-love"&gt;+ &lt;span class="with-love" id="heart"&gt; 5.hexo代码高亮(hexo配置文件 highlight属性) 1234567891011/* 代码块```顶部样式 */.highlight figcaption &#123; margin: 0em; padding: 0.5em; background: #eee; border-bottom: 1px solid #e9e9e9;&#125;.highlight figcaption a &#123; color: rgb(80, 115, 184);&#125; 4.footer cc-license 对应主题 (css common components footer)&lt;variables&gt; 3.阅读全文 圆角化 检查元素(css common components button)&lt;variables&gt; 2.网站图标 更换(16x16 32x32 画图 主题配置文件 avatar) 1.引用样式主要用于文章摘要(图片&amp;文字) 引用样式美化方案11234567891011121314151617181920.myblockquote:before &#123; position: relative; content: "\f10d" !important; font-size: 1rem; left: 0; margin-left:-1em; color: #233; font-family: FontAwesome; /*fontello*/&#125;.myblockquote:after &#123; position: relative; content: '\f10e' !important; font-size: 1rem; float: right; top: -1rem; margin-right:-1em; color: #233; font-family: FontAwesome;&#125; 引用样式美化方案2.css可放至 ~/next/css/_custom/_custom.styl 图片位置放在 ~/source/images目录下即可12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152.myblockquote &#123; display: block; margin-block-start: 1em; margin-block-end: 1em; margin-inline-start: 40px; margin-inline-end: 40px; position: relative; margin: 40px 0; /*距离标题大小*/ padding: 0; border-left: none; /*原始引用样式左边 竖线边框*/ text-align: center;&#125;.myblockquote:before &#123; position: absolute; content: ' '; display: block; width: 100%; height: 24px; opacity: 0.2; background-repeat: no-repeat; background-position: 0 -6px; background-size: 22px 22px; top: -20px; background-image: url(../images/quote-l.svg); border-top: 1px solid #ccc;&#125;.myblockquote:after &#123; position: absolute; content: ' '; display: block; width: 100%; height: 24px; opacity: 0.2; background-repeat: no-repeat; background-position: 100% 8px; /*横向|纵向 调整*/ background-size: 22px 22px; bottom: -20px; background-image: url(../images/quote-r.svg); border-bottom: 1px solid #ccc;&#125;/* 两种样式互不影响 &lt;div class="myblockquote"&gt; 自定义引用样式 &lt;/div&gt; &gt;原始引用样式*/ Hexo博客环境搭建12$ npm install hexo-cli... 参考官方文档吧 :D 哈哈 哈 嗝~！]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>Gemini</tag>
        <tag>美化</tag>
        <tag>功能增强</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[all categories]]></title>
    <url>%2Fall%20categories%2F</url>
    <content type="text"><![CDATA[摘要 ![alt](。。。/images/2.jpg) images正确路径/images/xxx.jpg categories维护 categories 之初-Java基础 之初-前端 之初-工具使用(ffmpeg Docker Json解析) 之初-框架(Spring …NIO RPC 模板引擎 日志) 之初-安全认证(OAuth …) 之初-加密(MD5 SHA SRA …) 之初-网络 协议… 之初-数据库 之初-服务器(Tomcat Nginx Jetty …) 之初-Linux 之初-算法 之初-进阶(开发模式 架构 …) 之初-常用配置文件及方法(.xml .properties…) 之初-小工具(语音转写 java执行cmd Python爬虫 …) 之初-Future(Python Go AI etc…) 之初-Others积累 之初-友链 之初-随笔]]></content>
      <categories>
        <category>所有文章分类汇总</category>
      </categories>
      <tags>
        <tag>all categories</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C1小本本到手,哈哈]]></title>
    <url>%2F%E9%9A%8F%E7%AC%94-C1%E9%A9%BE%E7%85%A7%2F</url>
    <content type="text"><![CDATA[科一：99；科二(第二次考过)：90；科三：100；科四：100；今天，拿到小本本啦 好好练车，考试放松！ 科一、科四理论考试，结合实际情景做题就OK啦科三上车前发动机启动？灯光开关为远光？车门检查？考试不能变道，鸣喇叭！！！2档行驶不能超30迈！！！车头平+铆钉：靠边最初1~2颗铆钉范围，后微微调整 灯光模拟：若前一项为(远光)或(示廓灯危险警告灯)下一项开始前应先恢复(近光灯)1：检查！上车调整，下车检查(关车门)2：踩离合,挂一档,左转向灯,鸣笛两声,松手刹起步3：起步后升2档，加减档3档-4档(离合&amp;油门互斥)4：变道超车转向灯6s5：公交站点刹车6：右转向灯靠边，踩离合刹车停车，停6秒拉手刹，关闭发动机，解安全带， 松双脚，结束关车门！ 科二科二：出库：车轮中心，快速打死侧方：宽窄&amp;进多进少曲线：出口处直角：余光&amp;果断上桥：远处 车正]]></content>
      <categories>
        <category>之初-随笔</category>
      </categories>
      <tags>
        <tag>暑假</tag>
        <tag>驾照</tag>
        <tag>C1</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bat脚本编写]]></title>
    <url>%2Fbat%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99%2F</url>
    <content type="text"><![CDATA[cd D:/hexo/Blogjava -versiongcc -v 代码高亮12345678910111213141516171819202122package com.yang;import java.io.*;public class Demo &#123; public static void main(String[] args) &#123; System.out.println(line); &#125;/* [language] [title] [url] [link-text] [language] 是代码语言的名称，用来设置代码块颜色高亮，非必须； [title] 是顶部左边的说明，非必须； [url] 是顶部右边的超链接地址，非必须； [link text] 如它的字面意思，超链接的名称，非必须； 亲测这4项应该是根据空格来分隔，而不是[]，故请不要加[]， 除非如果你想写后面两个，但不想写前面两个，那么就必须加[]了， 要这样写：[] [] [url] [link text]。/* &#125;]]></content>
      <categories>
        <category>之初-Others</category>
      </categories>
      <tags>
        <tag>bat脚本编写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java I/O流]]></title>
    <url>%2FJava%20IO%E6%B5%81%2F</url>
    <content type="text"><![CDATA[参考 https://www.cnblogs.com/furaywww/p/8849850.html]]></content>
      <categories>
        <category>之初-Java基础</category>
      </categories>
      <tags>
        <tag>Java I/O流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[邮件协议]]></title>
    <url>%2F%E9%82%AE%E4%BB%B6%E5%8D%8F%E8%AE%AE%2F</url>
    <content type="text"><![CDATA[邮件协议-POP3、SMTP、IMAP POP3 POP3是Post Office Protocol 3的简称，即邮局协议的第3个版本,它规定怎样将个人计算机连接到Internet的邮件服务器和下载电子邮件的电子协议。它是因特网电子邮件的第一个离线协议标准,POP3允许用户从服务器上把邮件存储到本地主机（即自己的计算机）上,同时删除保存在邮件服务器上的邮件，而POP3服务器则是遵循POP3协议的接收邮件服务器，用来接收电子邮件的。 SMTP SMTP的全称是“Simple Mail Transfer Protocol”，即简单邮件传输协议。它是一组用于从源地址到目的地址传输邮件的规范，通过它来控制邮件的中转方式。SMTP 协议属于 TCP/IP协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。SMTP服务器就是遵循SMTP协议的发送邮件服务器。SMTP认证，简单地说就是要求必须在提供了账户名和密码之后才可以登录 SMTP 服务器，这就使得那些垃圾邮件的散播者无可乘之机。增加SMTP认证的目的是为了使用户避免受到垃圾邮件的侵扰。 IMAP IMAP全称是Internet Mail Access Protocol，即交互式邮件存取协议，它是跟POP3类似邮件访问标准协议之一。不同的是，开启了IMAP后，您在电子邮件客户端收取的邮件仍然保留在服务器上，同时在客户端上的操作都会反馈到服务器上，如：删除邮件，标记已读等，服务器上的邮件也会做相应的动作。所以无论从浏览器登录邮箱或者客户端软件登录邮箱，看到的邮件以及状态都是一致的。]]></content>
      <categories>
        <category>之初-Others积累</category>
      </categories>
      <tags>
        <tag>POP3</tag>
        <tag>SMTP</tag>
        <tag>IMAP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python爬虫]]></title>
    <url>%2FPython%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[Pycharm -&gt; Python爬虫 Pycharm(安装包 镜像源：) 爬虫 scrapy]]></content>
      <categories>
        <category>之初-小工具</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里支付]]></title>
    <url>%2F%E9%98%BF%E9%87%8C%E6%94%AF%E4%BB%98%2F</url>
    <content type="text"><![CDATA[return-notify]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>阿里支付</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机器学习]]></title>
    <url>%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[损失函数决策树信息增益（比）信息熵/决策树生成&amp;剪枝ID3 C4.5]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 集合]]></title>
    <url>%2FJava%20%E9%9B%86%E5%90%88%2F</url>
    <content type="text"><![CDATA[https://mp.weixin.qq.com/s/TMTmpL6iA6Ol0T57yW5QJA]]></content>
      <categories>
        <category>之初-Java基础</category>
      </categories>
      <tags>
        <tag>Java 集合</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse查看JDK源码设置]]></title>
    <url>%2FEclipse%E6%9F%A5%E7%9C%8BJDK%E6%BA%90%E7%A0%81%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[在Eclipse中查看JDK类库的源代码1.点 “window”-&gt; “Preferences” -&gt; “Java” -&gt; “Installed JRES”2.此时”Installed JRES”右边是列表窗格，列出了系统中的 JRE 环境，选择你的JRE，然后点边上的 “Edit…”， 会出现一个窗口(Edit JRE)… 3.选中rt.jar文件的这一项：“c:\program files\java\jre_1.5.0_06\lib\rt.jar”点 左边的“+” 号展开它4.展开后，可以看到“Source Attachment:(none)”，点这一项，点右边的按钮“Source Attachment…”, 选择你的JDK目录下的 “src.zip”文件5.一路点”ok”,结束dt.jar是关于运行环境的类库,主要是swing的包tools.jar是关于一些工具的类库rt.jar包含了jdk的基础类库，也就是你在Java doc里面看到的所有的类的class文件 参考文章 https://www.cnblogs.com/lxmyhappy/p/7084097.html]]></content>
      <categories>
        <category>之初-常用配置文件及方法</category>
      </categories>
      <tags>
        <tag>Eclipse查看JDK源码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科大讯飞-语音转写]]></title>
    <url>%2F%E7%A7%91%E5%A4%A7%E8%AE%AF%E9%A3%9E-%E8%AF%AD%E9%9F%B3%E8%BD%AC%E5%86%99%2F</url>
    <content type="text"><![CDATA[demo: https://github.zhichuwy.xxx]]></content>
      <categories>
        <category>之初-小工具</category>
      </categories>
      <tags>
        <tag>科大讯飞</tag>
        <tag>语音转写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java执行cmd命令]]></title>
    <url>%2FJava%E6%89%A7%E8%A1%8Ccmd%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Java执行cmd命令、bat脚本 Process的输出流和错误流处理(阻塞问题) https://blog.csdn.net/Dancen/article/details/7969328https://blog.csdn.net/stormych/article/details/62037579https://blog.csdn.net/mengxingyuanlove/article/details/50707746 简单使用方法1234567891011121314151617181920212223242526// 调用命令脚本语言来实现功能// 1.错误的使用方式 Runtime.getRuntime().exec("xxx");// 2.正确的使用方式:需要指定参数(命令位置;-c表示先执行第一个参数;命令) Runtime.getRuntime().exec(new String[]&#123;"/bin/sh","c","xxx"&#125;); String tempCmd = "dexp " + userName + "/" + password + "@" + hostIP + ":" + port + " FILE=" + fileName + " DIRECTORY=" + filePath + " FULL=Y"; String[] cmds = &#123; "cmd", "/c", tempCmd &#125;; if (!System.getProperties().getProperty("os.name") .toString().toUpperCase().contains("WIN")) &#123; System.out.println("not windows"); cmds = new String[] &#123; "/bin/sh", "-c", tempCmd &#125;; &#125; System.out.println(tempCmd); Process process = Runtime.getRuntime().exec(cmds); BufferedReader reader = new BufferedReader(newInputStreamReader(process.getInputStream())); String line; while ((line = reader.readLine()) != null) &#123; System.out.println(line); &#125; 具体原因未知，嗝~java -version, gcc -v等命令通过getErrorStream()读出如：hexo -help 则通过getInputStream()读出hexo s ！不可测试，无cmd命令窗口，无法关闭server！ cmd /c dir 是执行完dir命令后关闭命令窗口cmd /k dir 是执行完dir命令后不关闭命令窗口cmd /c start dir 会打开一个新窗口后执行dir指令，原窗口会关闭cmd /k start dir 会打开一个新窗口后执行dir指令，原窗口不会关闭https://blog.csdn.net/halaoda/article/details/78778477 demo(单条命令, bat, 重定向)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233package com.yang.test;import java.io.BufferedReader;import java.io.File;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.UnsupportedEncodingException;//===================并发处理===============================class StreamManage extends Thread &#123; InputStream is; String type; public StreamManage(InputStream is, String type) &#123; this.is = is; this.type = type; &#125; public void run() &#123; InputStreamReader isr = null; try &#123; isr = new InputStreamReader(is, "gbk"); &#125; catch (UnsupportedEncodingException uee) &#123; uee.printStackTrace(); &#125; BufferedReader br = new BufferedReader(isr); String line = null; try &#123; while ((line = br.readLine()) != null) &#123; if (type.equals("Error")) &#123; System.out.println("Error &gt; " + line); &#125; else &#123; System.out.println("INFO &gt; " + line); &#125; &#125; &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; try &#123; is.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125;&#125;public class CmdTest &#123; public static void main(String[] args) throws IOException &#123;// String path = "mspaint";// Runtime run = Runtime.getRuntime();// try &#123;// Process process = run.exec("cmd.exe /k start " + path);// InputStream in = process.getInputStream();// while (in.read() != -1) &#123;// System.out.println(in.read());// &#125;// in.close();// process.waitFor();// &#125; catch (Exception e) &#123;// e.printStackTrace();// &#125; // String cmd = "gcc -v"; // String[] cmdarray = &#123; "cmd", "/C", cmd &#125;; // executeCMDfile(cmdarray, "D:/hexo/Blog", "D:/a.txt"); try &#123; startMailServer(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; // 执行 .bat 文件 private static void startMailServer() throws InterruptedException &#123; Runtime rt = Runtime.getRuntime(); // 运行时系统获取 try &#123; File filePath = new File("resource\\runStart.bat"); Process proc = rt.exec(new String[] &#123; "cmd", "/K", filePath.toString() &#125;); StreamManage errorStream = new StreamManage(proc.getErrorStream(), "Error"); StreamManage outputStream = new StreamManage(proc.getInputStream(), "INFO"); errorStream.start(); outputStream.start(); proc.waitFor(); proc.destroy(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; // 在指定路径下执行命令，并将执行结果信息重定向到某一文件中 public static String executeCMDfile(String[] cmds, String dirTodoCMD, String logToFile) throws IOException &#123; try &#123; ProcessBuilder builder = new ProcessBuilder(cmds); if (dirTodoCMD != null) builder.directory(new File(dirTodoCMD)); builder.redirectErrorStream(true); builder.redirectOutput(new File(logToFile)); Process p = builder.start(); p.waitFor(); InputStream is = p.getInputStream(); BufferedReader buffer = new BufferedReader(new InputStreamReader(is)); String line = null; StringBuffer sb = new StringBuffer(); while ((line = buffer.readLine()) != null) &#123; sb.append(line); &#125; is.close(); return sb.toString(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return null; &#125;&#125;//-----------------------------------------------------------------------------package com.yang.test;import java.io.*;public class CmdTest2 &#123; public static void main(String args[]) throws IOException, InterruptedException &#123; f2(); &#125; public static void f2() throws IOException, InterruptedException &#123; int rs = 0; String[] cmds = new String[3]; cmds[0] = "cmd"; cmds[1] = "/C"; cmds[2] = "java -version"; ProcessBuilder builder = new ProcessBuilder(cmds); builder.redirectErrorStream(true); Process process = builder.start(); BufferedReader br; br = new BufferedReader(new InputStreamReader(process.getInputStream(), "gbk")); PrintWriter pw = null; FileOutputStream os = null; os = new FileOutputStream("D:\\a.txt"); if (os != null) pw = new PrintWriter(os); String line = null; while (null != (line = br.readLine())) &#123; pw.println(line); System.out.println(line); &#125; if (pw != null) pw.flush(); rs = process.waitFor(); System.out.println(rs); pw.close(); &#125; public static void f() throws IOException, InterruptedException &#123; FileOutputStream fos = new FileOutputStream("D:/a.txt"); Runtime rt = Runtime.getRuntime(); String[] cmds = new String[3]; cmds[0] = "cmd"; cmds[1] = "/C"; //cmds[2] = "java -version"; cmds[2] = "hexo s"; Process proc = rt.exec(cmds); StreamGobbler outputGobbler = new StreamGobbler(proc.getInputStream(), "INFO", fos); StreamGobbler errorGobbler = new StreamGobbler(proc.getErrorStream(), "Error"); outputGobbler.start(); errorGobbler.start(); // outputGobbler.join();// errorGobbler.join(); int exitVal = proc.waitFor(); System.out.println("ExitValue: " + exitVal); fos.flush(); fos.close(); &#125;&#125;class StreamGobbler extends Thread &#123; InputStream is; String type; OutputStream os; StreamGobbler(InputStream is, String type) &#123; this(is, type, null); &#125; StreamGobbler(InputStream is, String type, OutputStream redirect) &#123; this.is = is; this.type = type; this.os = redirect; &#125; public void run() &#123; try &#123; PrintWriter pw = null; if (os != null) pw = new PrintWriter(os); InputStreamReader isr = new InputStreamReader(is, "gbk"); BufferedReader br = new BufferedReader(isr); String line = null; while ((line = br.readLine()) != null) &#123; if (pw != null) pw.println(line); System.out.println(type + "&gt;" + line); &#125; if (pw != null) pw.flush(); &#125; catch (IOException ioe) &#123; ioe.printStackTrace(); &#125; &#125;&#125; =====1234567891011121314151617181920212223242526272829303132333435363738394041424344// https://blog.csdn.net/Dancen/article/details/7969328//并发获取Process的输出流和错误流。通过启动两个线程来并发地读取和处理输出流和错误流//Bug : getErrorStream OK &amp;&amp; getInputStream = null ???//用ProcessBuilder的redirectErrorStream()方法合并输出流和错误流public static void main(String args[]) throws InterruptedException, IOException &#123; int rs = 0; String[] cmds = new String[3]; cmds[0] = "cmd"; cmds[1] = "/C"; cmds[2] = "java -version"; ProcessBuilder builder = new ProcessBuilder(cmds); builder.redirectErrorStream(true); Process process = null; process = builder.start(); BufferedReader br = null; br = new BufferedReader(new InputStreamReader(process.getInputStream(), "gbk")); PrintWriter pw = null; FileOutputStream os = null; os = new FileOutputStream("D:\\a.txt"); if (os != null) pw = new PrintWriter(os); String line = null; while (null != (line = br.readLine())) &#123; pw.println(line); System.out.println(line); &#125; if (pw != null) pw.flush(); rs = process.waitFor(); System.out.println(rs); pw.close();&#125;]]></content>
      <categories>
        <category>之初-小工具</category>
      </categories>
      <tags>
        <tag>Java执行cmd命令</tag>
        <tag>Java执行bat脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ffmpeg]]></title>
    <url>%2Fffmpeg%2F</url>
    <content type="text"><![CDATA[安装 下载Build压缩包，解压 设置环境变量 参考文章：https://www.jianshu.com/p/ddafe46827b7 项目导入问题 26105/26100错误better重建项目 config.propertiesstore_path(ex：D:/temp/test/) src .java中音频文件位置default(“./resource/audio/xxx.wav”)local_file(“D:\path\xxx.m4a”) 常用命令ffmpeg -i xxx.mp4 -acodec copy -vn output.aac]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>视频格式转换</tag>
        <tag>音视频分离</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python]]></title>
    <url>%2FPython%2F</url>
    <content type="text"><![CDATA[环境及使用 PyCharm 密钥(截至2020.06) 1K6IXATEF43-eyJsaWNlbnNlSWQiOiJLNklYQVRFRjQzIiwibGljZW5zZWVOYW1lIjoi5o6I5p2D5Luj55CG5ZWGOiBodHRwOi8vaWRlYS5oay5jbiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNi0wNSIsInBhaWRVcFRvIjoiMjAyMC0wNi0wNCJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNi0wNSIsInBhaWRVcFRvIjoiMjAyMC0wNi0wNCJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNi0wNSIsInBhaWRVcFRvIjoiMjAyMC0wNi0wNCJ9XSwiaGFzaCI6IjEzMjkyMzI4LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-KUaQi549fH96M/qU7jTvuMeq2GuedA+WppV3irI0JHlfDuhJlidK2m3yoRxitGNmimPFVUA8Dk38OzXnP29I39QDXH5VAF8VjOP0XrqdfrpaZUKpdhRaYz8r1NAwID75U4LqYCvFbazka1dCMJBFqJ2wum1+CSQhJ1O7CSchAJAbjcCRQjbU2sXOofAA2sPLi7nlJw2wrjOHzH9cOczUn11n24PE9BQ/oYGITHkzsu94i4Q90Z1jQysMtXLgM/HoLSHY2T9rKULLoh+tdMwBp9+m0VLF/R5gdkVDV/dlorrA9OEZIsSOaG+oWSen/AulKH6OXllZJoR+b/T6YYfGWg==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go]]></title>
    <url>%2FGo%2F</url>
    <content type="text"><![CDATA[环境(win10_x64 .msi 无需配置PATH) Download Go: https://golang.google.cn/dl/ IDE LiteIDE 安装MinGW 环境配置参考(win64) 12345678910111213141516171819202122工具-&gt;编辑当前环境# native compiler windows amd64GOROOT=D:\Future\Go#GOBIN=GOARCH=amd64GOOS=windowsCGO_ENABLED=1PATH=D:\NewInstall\C_ACM\Dev_Cpp\MinGW64\bin;%GOROOT%\bin;%PATH%#D:\Future\liteide\binLITEIDE_GDB=gdb64#D:\NewInstall\C_ACM\Dev_Cpp\MinGW64\binLITEIDE_MAKE=mingw32-makeLITEIDE_TERM=%COMSPEC%LITEIDE_TERMARGS=LITEIDE_EXEC=%COMSPEC%LITEIDE_EXECOPT=/C Golang（集成环境，无需配置）]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>Go</tag>
        <tag>Go 环境</tag>
        <tag>Go IDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Http]]></title>
    <url>%2FHttp%2F</url>
    <content type="text"><![CDATA[Http请求GET - 从指定的资源请求数据。POST - 向指定的资源提交要被处理的数据 GET 方法请注意，查询字符串（名称/值对）是在 GET 请求的 URL 中发送的： /test/demo_form.asp?name1=value1&amp;name2=value2有关 GET 请求的其他一些注释： GET 请求可被缓存GET 请求保留在浏览器历史记录中GET 请求可被收藏为书签GET 请求不应在处理敏感数据时使用GET 请求有长度限制GET 请求只应当用于取回数据 POST 方法 请注意，查询字符串（名称/值对）是在 POST 请求的 HTTP 消息主体中发送的： POST /test/demo_form.asp HTTP/1.1Host: w3schools.comname1=value1&amp;name2=value2 有关 POST 请求的其他一些注释： POST 请求不会被缓存POST 请求不会保留在浏览器历史记录中POST 不能被收藏为书签POST 请求对数据长度没有要求 o_0 GET POST 后退按钮/刷新 无害 数据会被重新提交（浏览器应该告知用户数据会被重新提交） 书签 可收藏为书签 不可收藏为书签 缓存 能被缓存 不能缓存 编码类型 application/x-www-form-urlencoded application/x-www-form-urlencoded 或 multipart/form-data。为二进制数据使用多重编码 历史 参数保留在浏览器历史中 参数不会保存在浏览器历史中 数据长度限制 当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大长度是 2048 个字符） 无限制 数据类型限制 只允许 ASCII 字符 没有限制，也允许二进制数据 安全性 与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。在发送密码或其他敏感信息时绝不要使用 GET ！ POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中 可见性 数据在 URL 中对所有人都是可见的 数据不会显示在 URL 中]]></content>
      <categories>
        <category>之初-网络 协议...</category>
      </categories>
      <tags>
        <tag>Http</tag>
        <tag>GET</tag>
        <tag>POST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse中Tomcat启动Run配置]]></title>
    <url>%2FEclipse%E4%B8%ADTomcat%E5%90%AF%E5%8A%A8Run%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[Eclipse中Tomcat启动Run配置 clean tomcat7：run 报错Tomcat====服务===手动启动设置Install JRE时候选中JDK的目录，因为jdk下面也有一个jre。为什么这个可以是因为maven的eclipse插件一些功能需要使用JDK，所以使用jdk目录可以解决这个问题。 参考文章：https://blog.csdn.net/u011734144/article/details/51894942https://blog.csdn.net/JQ_AK47/article/details/56675411]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
        <tag>Tomcat启动Run配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OAuth认证]]></title>
    <url>%2FOAuth%E8%AE%A4%E8%AF%81%2F</url>
    <content type="text"><![CDATA[参考文章：http://]]></content>
      <categories>
        <category>之初-安全认证</category>
      </categories>
      <tags>
        <tag>OAuth认证</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL 8.0]]></title>
    <url>%2FMySQL8%2F</url>
    <content type="text"><![CDATA[12345678910111213/*Error:Public Key Retrieval is not allowed:不允许公钥检索=&gt; ...UTC &amp; allowPublicKeyRetrieval=trueClass.forName("com.mysql.cj.jdbc.Driver");conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test_demo?useSSL=false&amp;serverTimezone=UTC","root","password");/Class.forName("com.mysql.jdbc.Driver");//conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test_demo","root","password");*/]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>MySQL 8.0</tag>
        <tag>Driver</tag>
        <tag>Connection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SVN相关]]></title>
    <url>%2FSVN%2F</url>
    <content type="text"><![CDATA[这三个软件：VisualSVN-Server Subversion TortoiseSVN 就是版本控制软件 1、其中VisualSVN-Server 和 Subversion 这两个软件都是版本控制中服务器端要使用的软件，简单的理解就是所提交的代码，就会存放到安装这两个软件的电脑上，这两个软件就会自动记录所提交的一些代码另外还会保存你的历史版本以防万一你要查找以前的代码；2、其中这两个软件的功能类似，但是VisualSVN-Server 这个软件将很多配置，如添加服务等直接帮助完成了，比较好用，易上手，而Subversion 需要跟人配置一些东西，个人觉得使用第一个软件就完全可以满足要求了；3、前面那两个软件的作用是配置服务器端， 那么TortoiseSVN 这个软件的作用是什么呢？它就是客户端需要的软件了。 用这个软件就可以很方便的向服务器端提交最新修改的代码。还可以很方便的从服务器端更新最新版本的代码。另外还可以很方便的查看以前提交的代码。总的来说，这三款软件都是在软件项目管理中必须的软件，前两款软件功能类似，只是配置方法不同，而最后那个软件就是与前两款软件中任意一款搭配使用的]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>SVN</tag>
        <tag>VisualSVN-Server</tag>
        <tag>Subversion</tag>
        <tag>TortoiseSVN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse项目相关踩坑]]></title>
    <url>%2FEclipse%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3%E8%B8%A9%E5%9D%91%2F</url>
    <content type="text"><![CDATA[快捷键 Ctrl+1 回车=&gt;自动补全返回类型 maven Pagehelper maven Pagehelper版本问题：https://blog.csdn.net/qq_36004521/article/details/78578075 war打包错误 war打包错误（webapp缺少web.xml文件）=&gt;右键项目-&gt;JaveEE Tools-&gt;Generate Deployment Descriptor Stub]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
        <tag>快捷键</tag>
        <tag>maven Pagehelper</tag>
        <tag>war打包错误</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[敏捷开发]]></title>
    <url>%2F%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%2F</url>
    <content type="text"><![CDATA[敏捷开发 CodeSheep:https://www.bilibili.com/video/av57269492 认识总结：]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>敏捷开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tomcat server.xml 配置详解]]></title>
    <url>%2FTomcat-server.xml%2F</url>
    <content type="text"><![CDATA[Tomcat server.xml https://www.cnblogs.com/kismetv/p/7228274.html]]></content>
      <categories>
        <category>之初-服务器</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>server.xml</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDEA安装及使用]]></title>
    <url>%2FIDEA%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[IDEA 注册码：https://blog.csdn.net/mobiusstrip/article/details/898410381.新建maven项目项目结构/add java&lt;mark root...&gt;、resource2.快捷键：Ctrl+Alt+L 格式化代码 Shift+Fn+F6 重命名Ctrl+D 复制当前行 Ctrl+X 删除当前行Ctrl+Shift+up/down 移动当前行Alt+Enter Fix3.Git远程推送 …（add commit&lt;本地&gt; pull&lt;检查是否与别人冲突&gt; commit pull&lt;再次检查&gt; push）4.Github推送:登录Github账号/VCS idea-Spring-maven-pom.xml&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.yang&lt;/groupId&gt; &lt;artifactId&gt;SSM&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;name&gt;SSM Maven Webapp&lt;/name&gt; &lt;!-- FIXME change it to the project's website --&gt; &lt;url&gt;http://www.example.com&lt;/url&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;spring.version&gt;4.3.15.RELEASE&lt;/spring.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-expression&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-tx&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-aop&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-beans&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;version&gt;${spring.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt; &lt;version&gt;1.3.0&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mybatis核心包 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.4.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt; &lt;version&gt;1.3.5&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mysql驱动包 --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.16&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.11&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt; &lt;artifactId&gt;jackson-core&lt;/artifactId&gt; &lt;version&gt;2.9.9&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt; &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt; &lt;version&gt;2.9.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt; &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt; &lt;version&gt;2.9.9&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;SSM&lt;/finalName&gt; &lt;pluginManagement&gt; &lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.5&lt;/version&gt; &lt;configuration&gt; &lt;configurationFile&gt;src/main/resources/generatorConfig.xml&lt;/configurationFile&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;!-- !!! --&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.16&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt; &lt;/plugin&gt; &lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt; &lt;version&gt;3.0.2&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.8.0&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; &lt;version&gt;2.22.1&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt; &lt;version&gt;3.2.2&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt; &lt;version&gt;2.5.2&lt;/version&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt; &lt;version&gt;2.8.2&lt;/version&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;/build&gt; &lt;/project&gt;]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>IDEA安装及使用</tag>
        <tag>IDEA密钥</tag>
        <tag>IDEA快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDEA导入项目(Maven Gradle)]]></title>
    <url>%2FIDEA%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE(Maven%20Gradle)%2F</url>
    <content type="text"><![CDATA[gradle：offline！！！关闭！！！WIFI网络-&gt;手机热点网络切换]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>IDEA项目导入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[postman使用]]></title>
    <url>%2Fpostman%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[参考文章：https://blog.csdn.net/fxbin123/article/details/80428216]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>postman</tag>
        <tag>接口测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows主机无法访问Linux虚拟机(Ubuntu)上的Tomcat]]></title>
    <url>%2FWindows-Linux(Ubuntu)-Tomcat%2F</url>
    <content type="text"><![CDATA[Windows主机无法访问Linux虚拟机(Ubuntu)上的Tomcat我的配置过程（Ubuntu14.04 LTS）首先，经过一番搜索多数文章给出的配置内容包括IP配置，虚拟机防火墙和端口配置。 1.IP配置在VMware Workstation中依次点击“编辑”-&gt;”虚拟网络编辑器”-&gt;”窗体顶部的VMnet8”-&gt;”窗体中部按钮NAT模式”，查看VMnet8网络的子网IP和网关IP。 在主机网络和共享中心中更改适配器配置，找到“VMware Virtual Ethernet Adapter for VMnet8“，根据上述查看的VMnet8网络子网IP和网关IP修改IPv4属性，确保主机能够ping通虚拟机IP（查看虚拟机IP命令：# ifconfig)，此时主机应能ping通虚拟机。 2.虚拟机firewall和端口配置有文章说要把防火墙关闭，那就关闭防火墙试下。关闭防火墙时，尝试了搜索到的两种方法。 1.# ufw disable 2.# service iptables stop (命令2好像不太好使，大致了解下好像是ufw是一个简化版的iptables，基于iptables，配置比iptables简单。centos7版本使用firewalld对防火墙进行加强，不再使用原来的iptables。在我的Ubuntu中ufw和firewalld均可使用，只不过firewalld需要安装一下:# apt-get install firewalld) 防火墙关闭之后再访问Tomcat，好像还是访问失败，于是接着尝试配置端口（使用的是firewalld，在解决问题后了解ufw命令用法时，ufw命令：# ufw allow proto tcp IP1 port xxx to IP2 port xxx，和后面所述成功解决问题的方法好像类似，不过自己未尝试）。 1.安装firewalld：# apt-get install firewalld 2.开放端口（这里开放了3306端口）：# firewall-cmd –zone=public –add-port=3306/tcp 查看端口状态：# netstat -an|grep 3306 3.# iptables-save 很不幸，还是没能成功访问。 注：有些命令可能需要root权限。 3.成功解决问题 配置很简单，在VMware Workstation中进入”虚拟网络编辑器”，点击”更改设置”，进入”NAT设置“。 主机端口：在主机上访问虚拟机服务器时的访问端口，我设置的9080（在主机访问 http://localhost:9080/ 就可访问到虚拟机上的Tomcat） 虚拟机端口：Linux上Tomcat访问端口（默认8080） 注：每次打开虚拟机前需执行 # service firewalld stop(尝试解决中…) 由于我是按照文章一步一步配置的，所以此处解决问题是否与前面的配置有关自己未验证。遇到同样问题的小伙伴可以按照从后向前的顺序进行配置，如果能够尽快解决问题当然最好不过了。 参考文章：https://blog.csdn.net/zswjob126/article/details/49498217 总结 有必要好好学习Linux，掌握原理及常用命令（本次学到的命令：iptables，ufw，firewalld） 要多了解网络相关知识，如VMware中的NAT模式，桥接模式，仅主机模式的工作原理]]></content>
      <categories>
        <category>之初-Linux</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyBatis-Plus]]></title>
    <url>%2FMyBatis-Plus%2F</url>
    <content type="text"><![CDATA[mybatis-plus]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mybatis逆向生成]]></title>
    <url>%2FMyBatis-Generator%2F</url>
    <content type="text"><![CDATA[使用1.mybatis-generator-corehttps://blog.csdn.net/qq_33811662/article/details/80532721 2.插件配置 3.generatorConfig.xml &amp;&amp; mysql.properties(可配置性)数据库连接时：驱动jar路径问题解决方案 1）项目中导入驱动jar包,并在generatorConfig.xml中指定特定数据库的jdbc驱动jar包的位置&lt;classPathEntry location=&quot;${jdbc.driverLocation}&quot;/&gt; (Pass) 连接MySQL1234567891011121314151617181920/*#Public Key Retrieval is not allowed:不允许公钥检索(allowPublicKeyRetrieval=true！！！)#若pom.xml中mybatis-generator-maven-plugin插件配置了mysql驱动依赖则不需要jdbc.driverLocation#否则,需在项目中导入mysql-connector-java-8.0.16.jar,并在generatorConfig.xml中配置#&lt;classPathEntry location="$&#123;jdbc.driverLocation&#125;"/&gt;#jdbc.driverLocation=D:\\00Java\\IdeaProjects\\SSM\\mysql-connector-java-8.0.16.jarjdbc.driverClass=com.mysql.cj.jdbc.Driverjdbc.connectionURL=jdbc:mysql://localhost:3306/db_test?useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=truejdbc.userId=rootjdbc.password=root_wy------------------------------------------------&lt;!-- a对实体 "serverTimezone" 的引用必须以 ';' 分隔符结尾。 --&gt;&lt;jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"connectionURL="jdbc:mysql://localhost:3306/e3mall?useSSL=false&amp;amp;serverTimezone=UTC" userId="root" password="root_wy" /&gt;*/ 2）mybatis-generator-maven-plugin插件中,添加依赖：mysql-driver-8.0.16.jar 1234567891011121314151617&lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.5&lt;/version&gt; &lt;configuration&gt; &lt;configurationFile&gt;src/main/resources/generatorConfig.xml&lt;/configurationFile&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.16&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/plugin&gt; 4.run config: (+maven/ mybatis-generator:generate -e) 5.生成的xxxMapper.xml文件报错： &lt;statement&gt; or DELIMITER expected, got &#39;id&#39; 6.SQL dialect（方言） is not configured //设置中搜索dialect进行设置 7.springboot:mybatis-plus... mapper123456&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;&lt;mapper namespace="com.yang.dao.RedPacketDao"&gt;&lt;/mapper&gt; generatorConfiguration12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;&lt;generatorConfiguration&gt; &lt;properties resource="mysql.properties"&gt;&lt;/properties&gt; &lt;!--指定特定数据库的jdbc驱动jar包的位置--&gt; &lt;!-- &lt;classPathEntry location="$&#123;jdbc.driverLocation&#125;"/&gt; --&gt; &lt;!--targetRuntime="MyBatis3Simple":生成简单版的CRUD;MyBatis3:豪华版 --&gt; &lt;context id="MyBatisGenerator" targetRuntime="MyBatis3"&gt; &lt;!-- 生成的实体Bean,将实现Serializable --&gt; &lt;plugin type="org.mybatis.generator.plugins.SerializablePlugin"&gt; &lt;/plugin&gt; &lt;commentGenerator&gt; &lt;!-- 是否去除自动生成的注释 true:是 ; false:否 --&gt; &lt;property name="suppressAllComments" value="true"/&gt; &lt;/commentGenerator&gt; &lt;!-- jdbcConnection:连接数据库 --&gt; &lt;jdbcConnection driverClass="$&#123;jdbc.driverClass&#125;" connectionURL="$&#123;jdbc.connectionURL&#125;" userId="$&#123;jdbc.userId&#125;" password="$&#123;jdbc.password&#125;"&gt; &lt;/jdbcConnection&gt; &lt;!-- 默认false,把JDBC DECIMAL和 NUMERIC 类型解析为 Integer true, 把JDBC DECIMAL和 NUMERIC类型解析为java.math.BigDecimal --&gt; &lt;javaTypeResolver&gt; &lt;property name="forceBigDecimals" value="false"/&gt; &lt;/javaTypeResolver&gt; &lt;!-- 生成model模型所对应的包路径,以及文件存放路径(targetProject); targetProject可以指定具体的路径,如./src/main/java,也可以使用“MAVEN”来自动生成, 这样生成的代码会在target/generatord-source目录下 --&gt; &lt;javaModelGenerator targetPackage="com.generator.model" targetProject="./src/main/java"&gt; &lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt; &lt;property name="enableSubPackages" value="true"/&gt; &lt;!--从数据库返回的值被清理前后的空格 --&gt; &lt;property name="trimStrings" value="true"/&gt; &lt;!-- 是否对model添加 构造函数 --&gt; &lt;property name="constructorBased" value="false"/&gt; &lt;!-- 建立的Model对象是否 不可改变 即生成的Model对象不会有 setter方法，只有构造方法 --&gt; &lt;property name="immutable" value="false"/&gt; &lt;/javaModelGenerator&gt; &lt;!--对应的mapper.xml文件 --&gt; &lt;sqlMapGenerator targetPackage="com.generator.mapper" targetProject="./src/main/java"&gt; &lt;property name="enableSubPackages" value="true"/&gt; &lt;/sqlMapGenerator&gt; &lt;!-- 对应的Mapper接口类文件--&gt; &lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码 type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象 type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象 type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口 --&gt; &lt;javaClientGenerator type="XMLMAPPER" targetPackage="com.generator.dao" targetProject="./src/main/java"&gt; &lt;property name="enableSubPackages" value="true"/&gt; &lt;/javaClientGenerator&gt; &lt;!-- 数据表与Bean的映射 --&gt; &lt;table tableName="t_red_packet" domainObjectName="RedPacket" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"&gt; &lt;/table&gt; &lt;table tableName="t_user_red_packet" domainObjectName="UserRedPacket"/&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt;]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>mybatis-generator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redis-xxx]]></title>
    <url>%2FRedis-xxx%2F</url>
    <content type="text"><![CDATA[Redis-一篇搞定]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>Redis</tag>
        <tag>Redis数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring-xxx]]></title>
    <url>%2FSpring-xxx%2F</url>
    <content type="text"><![CDATA[Spring 学习亦山(阿里巴巴) https://me.csdn.net/u010349169个人主页： http://it-mentor.cn 注意取舍 https://bestzuo.cn hexo new “Spring-入门”hexo new “SpringMVC-xxx”hexo new “SpringBoot-xxx”基本概念 etc. (知识总结提取要点)]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>IOC AOP DI</tag>
        <tag>Spring 事务管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyBatis-xxx]]></title>
    <url>%2FMyBatis-xxx%2F</url>
    <content type="text"><![CDATA[分页插件mybatis-plus]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>分页插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git]]></title>
    <url>%2FGit%2F</url>
    <content type="text"><![CDATA[Git简单应用：部署代码到服务器 https://blog.csdn.net/bencjl/article/details/53699684 rebase merge Git使用start a working area (see also: git help tutorial) clone Clone a repository into a new directory init Create an empty Git repository or reinitialize an existing one work on the current change (see also: git help everyday) add Add file contents to the index mv Move or rename a file, a directory, or a symlink reset Reset current HEAD to the specified state rm Remove files from the working tree and from the index examine the history and state (see also: git help revisions) bisect Use binary search to find the commit that introduced a bug grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree status grow, mark and tweak your common history branch List, create, or delete branches checkout Switch branches or restore working tree files commit Record changes to the repository diff Show changes between commits, commit and working tree, etc merge Join two or more development histories together rebase Reapply commits on top of another base tip tag Create, list, delete or verify a tag object signed with GPG collaborate (see also: git help workflows) fetch Download objects and refs from another repository pull Fetch from and integrate with another repository or a local branch push Update remote refs along with associated objects ‘git help -a’ and ‘git help -g’ list available subcommands and some concept guides.See ‘git help ‘ or ‘git help ‘to read about a specific subcommand or concept. 开始工作区域（另请参阅：git帮助教程） clone将存储库克隆到新目录中 init创建一个空的Git存储库或重新初始化现有的存储库 处理当前的变化（另请参阅：git help每天） add将文件内容添加到索引中 mv移动或重命名文件，目录或符号链接 reset将当前HEAD重置为指定状态 rm从工作树和索引中删除文件 检查历史和状态（另请参阅：git help revision） bisect使用二进制搜索来查找引入错误的提交 grep打印与图案匹配的线条 log显示提交日志 show显示各种类型的对象 status显示工作树状态 成长，标记和调整您的共同历史 branch列出，创建或删除分支 checkout切换分支或恢复工作树文件 commit将更改记录到存储库 diff显示提交，提交和工作树之间的更改等 合并将两个或多个开发历史连接在一起 rebase Reapply在另一个基本提示之上提交 标签创建，列出，删除或验证使用GPG签名的标记对象 协作（另请参阅：git help workflows） fetch从另一个存储库下载对象和引用 pull从另一个存储库或本地分支中获取并集成 推送更新远程引用以及关联的对象 ‘git help -a’和’git help -g’列出了可用的子命令和一些概念指南。请参阅’git help &lt;command&gt;‘或’git help&lt;concept&gt;‘阅读有关特定子命令或概念的内容。 先配置信息1.git config --global user.name &quot;linlianhuao&quot;2.git config --global user.email &quot;linlianhuao@qq.com&quot; 创建仓库并提交代码1.git init2.git remote add origin git@gitlab.***.com:linlianhuao/**.git3.git add -A4.git commit -m 建立项目5.git push -u origin master 拉取远程代码1.git clone git@gitlab.***.com:linlianhuao/**.git2.cd **3.git add -A4.git commit -m 提交信息5.git push -u origin master 为什么要先commit，然后pull，最后再push？而不是commit然后直接push？现在远程有一个仓库，分支就一个，是master。本地的仓库是从远程的master上clone下来的，再在自己本地改好，再commit → pull → push。 1，那我本地这个也算是个分支？还是就是一个本地仓库？本地和远程的关系相当于两个分支,你感觉一样是因为你git pull 的时候已经自动给绑定好对应关系了 2，如果我在远程新建了个分支，然后我pull了下来，那我本地到底有分支这个说法吗？我本地的分支是不是就是那个远程新建的分支？你远程新建了一个分支拉到本地的道理是一样的,属于复制了一份,但是本地分支和远程分支已经是两个东西了 3，本地仓库和本地分支有什么区别？本地分支属于本地仓库里,是包含关系,一个仓库里可以有很多分支, 如果是 tag 的话可以分离出独立的仓库 4，commit是提交到本地仓库，然后push，这个push是把所有代码推到远程仓库，还是只是把commit的地方推到远程仓库？肯定不会全量推送到远程的,是通过对比 commit 的记录,如果本地高于远程就直接把多出来的commit 给怼上去,如果本地的这几个 commit 和远程的 commit 有冲突的部分就merge,然后根据提交时间排序再新建一个merge 的 commit 记录再怼上去 5，那为什么要先commit，然后pull，然后再push，我pull了，岂不是把自己改的代码都给覆盖掉了嘛，因为远程没有我改的代码，我pull，岂不是覆盖了我本地的改动好的地方了？那我还怎么push？这个先 commit 再 pull 再 push 的情况就是为了应对多人合并开发的情况：1)commit 是为了告诉 git 我这次提交改了哪些东西,不然你只是改了但是 git 不知道你改了,也就无从判断比较;2)pull是为了本地 commit 和远程commit 的对比记录,git 是按照文件的行数操作进行对比的,如果同时操作了某文件的同一行那么就会产生冲突,git 也会把这个冲突给标记出来,这个时候就需要先把和你冲突的那个人拉过来问问保留谁的代码,然后在 git add &amp;&amp; git commit &amp;&amp; git pull 这三连,再次 pull 一次是为了防止再你们协商的时候另一个人给又提交了一版东西,如果真发生了那流程重复一遍,通常没有冲突的时候就直接给你合并了,不会把你的代码给覆盖掉3)出现代码覆盖或者丢失的情况:比如A B两人的代码pull 时候的版本都是1,A在本地提交了2,3并且推送到远程了,B 进行修改的时候没有commit 操作,他先自己写了东西,然后 git pull 这个时候 B 本地版本已经到3了,B 在本地版本3的时候改了 A 写过的代码,再进行了git commit &amp;&amp; git push 那么在远程版本中就是4,而且 A 的代码被覆盖了,所以说所有人都要先 commit 再 pull,不然真的会覆盖代码的 6，两个分支，A和B，A合并B和B合并A，有区别吗？两个互相合并的唯一区别就是 A-&gt;B 的时候 B 分支上会产生一个 merge_commit 的信息,这个时候 B 是合并状态而 A 未合并状态,如果现在没有发生任何改动执行 B-&gt;A 就直接切换过去了,连 merge_commit 都不会生成了 如何在一个电脑上分别向公司git服务器和自己的github上传代码（两个不同的ssh-key的配置方法）本文链接：https://blog.csdn.net/xct841990555/article/details/80300900 最近有过这样一个需求：因为我工作和学习都是用的一台电脑，在工作中有时候需要在本地向公司的服务器上传提交代码。闲暇自己学习动手写demo时，需要向github上上传代码。这个时候又不想用同一个邮箱和同一套秘钥（我倒这样没试过。应该不可行吧）。于是就自己生成了两份不同的秘钥。以下是配置的方法： 配置方法先进入到C:\Users\用户名.ssh目录下先生成用于访问github的密钥对ssh-keygen -t rsa -C &#39;你的邮箱&#39; 再生成访问自己公司的秘钥对（注意重新命名，否则会覆盖掉上面刚生成的秘钥）ssh-keygen -t rsa -C &#39;你在公司的邮箱&#39; -f id_rsa_xxx 分别将生成的两个公钥id_rsa.pub和id_rsa_xxx.pub添加到github中和你公司的gerrit的setting中 重点: 在C:\Users\用户名.ssh下创建config文件，此文件用于配置私钥对应的服务器。内容如下：123456789101112131415161718192021222324/*#公司的秘钥配置Host 公司的git的访问ipHostName 公司的git的访问ipPort 公司的git的访问ip端口PreferredAuthentications publickeyIdentityFile C:\Users\用户名\.ssh\id_rsa_xxx#github的秘钥配置Host github.comHostName ssh.github.comUser 你的邮箱Port 443PreferredAuthentications publickeyIdentityFile C:\Users\用户名\.ssh\id_rsa# 配置文件参数# Host : Host可以看作是一个你要识别的模式，对识别的模式，进行配置对应的的主机名和ssh文件，建议最好和HostName一致都为ip# HostName : 要登录主机的主机名# User : 登录名即邮箱# Port 主机名后的端口（github是 443 ）# IdentityFile : 指明上面User对应的identityFile路径*/ 关于以上github的 Port 之前我这是的22，但是不知道为什么不行。然后443就是好的。然后就是用git命令去测试了，尝试去服务器拉一份代码下来。如果成功的话，则会在.ssh目录下生成known_hosts文件，并将账户信息自动加进去。]]></content>
      <categories>
        <category>之初-项目版本管理</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
