<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Alg-洗牌算法优化]]></title>
    <url>%2FAlg-%E6%B4%97%E7%89%8C%E7%AE%97%E6%B3%95%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[数组Card [n=53] 随机产生下标[0..n=53]n– 缩小范围 0 1 2 .. rand .. n ..每产生一张牌 Card[rand] Card[n–]]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>洗牌算法优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx]]></title>
    <url>%2FNginx%2F</url>
    <content type="text"><![CDATA[Nginx配置 (待补充：e^3) 端口 IP 分布式 Nginx配置示例1234567891011121314151617181920212223242526272829303132333435363738394041/*worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; #gzip on; server &#123; listen 9090; server_name localhost; location / &#123; root html; index index.html index.htm; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125; upstream jml&#123; server 192.168.139.1:8180; server 192.168.139.1:8280; server 192.168.139.1:8380; &#125; server &#123; listen 8080; server_name localhost; location / &#123; proxy_pass http://192.168.139.1:8180; index index.jsp index.html index.htm; &#125; &#125;&#125; */ 反射去除null字段123456789101112131415161718192021222324252627282930313233343536373839404142public class ReflectUtils &#123; /*获取类的字段*/ public static String getField(Object o) &#123; Field[] fields = o.getClass().getDeclaredFields(); StringBuffer sb = new StringBuffer(); for (Field f : fields ) &#123; //允许操作属性 f.setAccessible(true); sb.append(f.getName() + ","); &#125; return sb.substring(0,sb.length()-1); &#125; /*去除没有值的字段*/ public static Map filterEmptyValue(Object o)&#123; Map map = new HashMap(); Field[] fields = o.getClass().getDeclaredFields(); StringBuffer sb = new StringBuffer(); for (Field f : fields ) &#123; //允许操作属性 f.setAccessible(true); try &#123; if (f.get(o) != null)&#123; Object value = f.get(o); if (!StringUtils.isNullOrEmpty(value.toString()))&#123; map.put(f.getName(),value); &#125; &#125; &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; return map; &#125; public static void main(String[] args) &#123; User user = new User(); user.setAge(18); System.out.println(ReflectUtils.getField(user)); System.out.println(ReflectUtils.filterEmptyValue(user)); &#125;&#125;]]></content>
      <categories>
        <category>之初-服务器</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A-学习清单]]></title>
    <url>%2FA-%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95%2F</url>
    <content type="text"><![CDATA[计划]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-Tree]]></title>
    <url>%2FAlg-Tree%2F</url>
    <content type="text"><![CDATA[Tree相关算法汇总 B+ B-树 二叉平衡树 红黑树 二叉排序树1.定义(动态) 2.搜索算法 2.1 return p=非空|null; 2.2return p=非空|f(父结点) 3.插入算法 4.删除算法( * p ) 4.1p为叶子结点：直接删除 4.2p只有一个孩子结点：上移 4.3p有两个孩子结点:a,b 遍历 非递归遍历二叉树 递归遍历二叉树 查找]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Tree</tag>
        <tag>有道云笔记迁移</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Alg-排序]]></title>
    <url>%2FAlg-%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[排序算法汇总 1.冒泡排序12345678910111213141516171819202122232425262728293031323334/*未优化(某一趟两两比较结束, 未发生元素移动,则r[0..i]为有序序列，终止程序)void BubbleSort(int[] r) &#123; // r[0..n-1] int n = r.length; // n-1 趟 // 1 . i . n-1 // 0 1 2 . . n-1 // 0 . j for(int i=n-1; i&gt;=1; i--) &#123; for(int j=0; j&lt;i; j++)&#123; if(r[j] &gt; r[j+1]) r[j] &lt;--&gt; r[j+1]; &#125; &#125;&#125;// 优化for (int i = n-1, change = true; i &gt;= 1 &amp;&amp; change; i--) &#123; change = false; for (int j = 0; j &lt; i; j++)&#123; if(r[j] &gt; r[j+1]) &#123; r[j] &lt;--&gt; r[j+1]; change = true; &#125; &#125;&#125;*/ 2.快速排序123456789101112131415161718192021222324252627282930313233/*void QSort (int[] r, int low, int high)&#123; if (low &lt; high) &#123; int pivotloc = Partition (r, low, high); QSort (r, low, pivotloc-1); QSort (r, pivotloc+1, high); &#125;&#125;int Partition (int[] r, int low, int high) &#123; r[0] = r[low]; // 1 3 2 #4# 5 6 4 // 4 1 3 2 4 6 4 // 1 3 2 #4# 4 6 4 !!! // 4 6 4 return low=high=1; // QSort(r,low=1,p-1)退出low=high // QSort(r,p+1,high=3) 6 4排序完成 while (low &lt; high) &#123; // low &lt; high ! while (low &lt; high &amp;&amp; r[high] &gt;= r[0]) high--; r[low] = r[high]; while (low &lt; high &amp;&amp; r[low] &lt;= r[0]) low++; r[high] = r[low]; &#125; r[low] = r[0]; return low;&#125;*/ 3.堆排序1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465/*以非递减排序为例：建立大顶堆,调整时堆顶-&gt;h[n--]数组h[1..n]-&gt;完全二叉树不同层间元素：整体有序同一层间元素：先后无序最后一个非终结结点 i=floor[n/2]新建堆：自底向上 h[1..i] i--(i&gt;0)调整堆：自上向下 h[1..j-1] j=n; (j&gt;1); j--; h[1]&lt;--&gt;h[j] HeapAdjust(h,1,j-1)void HeapAdjust(int[] h, int s, int m) &#123; rc = h[s]; // 调整 s,自上而下找出大元素 for (j = s*2; j &lt;= m; j*=2) &#123; // 求max(左孩子，右孩子) // 左右结点相等[!无影响!] // j &lt; m !!! if (j &lt; m &amp;&amp; h[j] &lt; h[j+1]) j++; // 堆顶 &amp; max 比较 // h[s]为最大元素,break; // 否则交换元素,下轮比较 if (h[s] &gt;= h[j]) break; // 处理方式一：互换元素 // h[s] &lt;--&gt; h[j]; // 处理方式二：rc暂存h[s] h[s] = h[j]; // 向下深一层 // 切换堆顶元素,后续比较 s = j; &#125; h[s] = rc;&#125;void HeapSort(int[] h) &#123; // 新建堆 // 每个非终端结点(层层向上) // max,即当前层&gt;=all下方元素 for (int i = h.length / 2; i &gt; 0; i--) &#123; HeapAdjust(h,i,h.length); &#125; // 调整堆 // 大堆顶移至尾部, // 尾部元素移至堆顶, // 调整堆找出次大元素 for (int j = h.length; j&gt;1; j--) &#123; h[1] &lt;--&gt; h[j]; HeapAdjust(h,1,j-1); &#125;&#125;*/ 4.直接插入排序1234567891011121314151617181920212223242526272829303132/*void insertSort(int[] r)&#123; // n-1 趟 for (int i = 2; i &lt;= r.length; i++)&#123; if (r[i] &lt; r[i-1])&#123; r[0] = r[i]; r[i] = r[i-1]; for (int j = i-2; r[0] &lt; r[j]; --j)&#123; r[j+1] = r[j]; &#125; r[j+1] = r[0]; &#125; &#125;&#125;时间复杂度分析(非递增排序)比较次数：[i=2..n]∑i (n+2)(n-1)/21次 ：r[i] &amp; r[i-1]i-1次：r[0] &amp; r[1..i-1]移动次数：[i=2..n]∑(i+1) (n+4)(n-1)/21次 ：r[i] -&gt; r[0]i-1次：r[1..i-1] 后移1次 ：r[0] -&gt; r[j+1]*/ 5.折半插入排序12345678910111213141516171819202122232425262728293031/*关于二分查找适用有序查找low high最终指向同一个元素至 high &lt; low 结束3 4 4 6 7 &amp; 44 4 5 6 74 5 6 74 6 7void BInsertSort(int[] r) &#123; for (i = 2; i &lt;= r.length; i++) &#123; r[0] = r[i]; low = 1; high = i-1; while (low &lt;= high) &#123; m = (low + high) / 2; // &lt; &amp; &lt;= &amp; r[high+1]=r[0]区别 if(r[0] &lt; r[m]) high = m-1; else low = m+1; &#125; /* * high=m-1 low ：r[0]&lt;r[m] * high low=m+1 ：r[0]&gt;=r[m] */ for (j = i-1; j &gt;= high+1; j--) r[j+1] = r[j]; r[high+1] = r[0]; &#125;&#125;*/ 6.归并排序(2-路归并)12345678910111213141516171819202122232425262728293031/*思路：SR[] TR[] 辅助空间void MSort(int s, int t) &#123; // s,m,t if (s == t) TR[s] = SR[t]; // 必须有else,s=t时后续不执行 else &#123; m = (s + t) / 2; MSort(s, m); MSort(m+1, t); Merge(s, m, t); &#125;&#125;void Merge(int i,int m,int n) &#123; // 类似链表合并 // k -&gt; TR[k] // i .. m m+1 .. t // j for (j = m + 1, k = i; i &lt;= m &amp;&amp; j &lt;= n; k++) &#123; if(SR[i] &lt;= TR[j]) TR[k] = SR[i++]; else TR[k] = SR[j++]; &#125; if(i&lt;=m) TR[k..n] = SR[i..m]; if(j&lt;=n) TR[k..n] = SR[j..n];&#125;*/ 选择排序123456/**/ 希尔排序123456/* 增量问题*/]]></content>
      <categories>
        <category>之初-算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>有道云笔记迁移</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS入门]]></title>
    <url>%2FCSS%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[外边距 margin :邻接(非包含关系)元素位置关系内边距 padding:内外元素边距span标签 被用来组合文档中的行内元素 这是原始引用样式 1234567891011121314151617&lt;!-- 左侧图片，右侧上下文字 --&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;body&gt; &lt;div&gt; &lt;div style="float: left; width: 4%; "&gt; &lt;img src="https://Dxoca.cn/image/headPortrait.jpg" width="64px" height="64px" alt="fail" /&gt; &lt;/div&gt; &lt;div style="float: right; width: 96%; " &gt; &lt;div style="padding-left: 5px; "&gt; &lt;a href="https://Dxoca.cn"&gt;Dxoca's blog xxxxx&lt;/a&gt; &lt;/div&gt; &lt;p&gt;yyyyyy&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 12// css注释方法为 / *. . .* /// 不要加script标签 在css中类型连用123.aclass .bclass &#123; color: #0000ff;&#125; /*同时包含ab类型时c,olor被设置为#0000ff*/]]></content>
      <categories>
        <category>之初-前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[meta标签和referrer策略]]></title>
    <url>%2Fmeta%E6%A0%87%E7%AD%BE%E5%92%8Creferrer%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[HTML meta标签 and 图片加载问题 注意：引用&quot;&gt;&quot;,换行后内容仍在此引用内，结束引用需间隔一行 myblockquote使用时,所有内容必须(不能手动换行,否则html显示时会多出&lt;br&gt;) &lt;font size=&quot;12px&quot;&gt; &lt;p style=&quot;font-size: 13px;&quot;&gt; p标签内字体大小设置无效 图片加载问题12&lt;!-- 添加上图片加载正常，但是网站底部统计数据无法显示 --&gt;&lt;meta name="referrer" content="no-referrer" /&gt; meta标签使用 相关内容：referrer策略和meta标签的问题原文地址：https://segmentfault.com/a/1190000017896469参考文章：https://blog.csdn.net/ccfxue/article/details/53119936]]></content>
      <categories>
        <category>之初-前端</category>
      </categories>
      <tags>
        <tag>meta</tag>
        <tag>referrer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github更多功能]]></title>
    <url>%2FGithub%E6%9B%B4%E5%A4%9A%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[Project项目管理(进度,bugs,待办事项优先级…) Wiki文档(某一仓库下使用,clone至本地后为.md文件)Home(Welcome/说明)Title(文档内容)Sidebar(侧边栏/目录)]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Project</tag>
        <tag>Wiki</tag>
        <tag>etc.</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docsifyjs]]></title>
    <url>%2Fdocsifyjs%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%2F</url>
    <content type="text"><![CDATA[相关链接官方文档：A magical documentation site generator. https://docsify.js.orgdocsify项目clone：https://github.com/docsifyjs/docsify托管至CODING： https://coding.net]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Docsifyjs</tag>
        <tag>docsify</tag>
        <tag>文档生成工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Next 博客历程]]></title>
    <url>%2FHexo%2BNext%E5%8D%9A%E5%AE%A2%E5%8E%86%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Gemini持续优化ing…01.&nbsp;keyword搜索引擎收录02.&nbsp;图片摘要大小(原始尺寸)03.&nbsp;自定义page页自定义链接(图文链接-友链)04.&nbsp;Valine评论权限和(default)头像05.&nbsp;评论区焦点触发 显示/隐藏 GIF图片06.&nbsp;Gitalk评论系统07.&nbsp;动态背景.js08.&nbsp;背景图片轮换09.&nbsp;浮动小人儿 https://www.hojun.cn10.&nbsp;CDN加速 https://canye365.cn11.&nbsp;Docsify使用12.&nbsp;CODING托管13.&nbsp;typecho-handsome主题14.&nbsp;Google 广告接入,,, 错误处理 3.友链page：请求太多,服务器拒绝请求(异步？) 2.链接头像(meta name=”referrer” content=”no-referrer”/) 1.TypeError: Cannot set property ‘lastIndex’ of undefinedat highlight (D:\hexo\Blog\node_modules\highlight.js\lib\highlight.js:577:35)解决：修改配置文件_config.yml(注意不是主题里面的配置文件！) 把auto_detect设置为false,即可解决 功能添加 8.Live-2d模型添加 https://www.zhangxinxu.com/wordpress/2018/05/live2d-web-webgl-js/https://huaji8.top/post/live2d-plugin-2.0/https://blog.csdn.net/appleyuchi/article/details/91882571https://www.jianshu.com/p/3a6342e16e57https://www.jianshu.com/p/4b61d8702cfa 7.footer评论回复 温馨提示 1) css修改css\_common\componments\footer\footer.styl -&gt; color: #D2B48C2) 在next\layout\_partials\comments.swig末尾处添加12345678 &#123;% elseif theme.valine.appid and theme.valine.appkey %&#125; &lt;div class="comments" id="comments"&gt; &lt;/div&gt; &lt;div class="comments-warn"&gt;温馨提示：评论系统使用的是Gravatar头像,正确填写邮箱是可以收到评论回复的哦 @( ◕ x ◕ )@ &lt;/div&gt; &#123;% endif %&#125;&#123;% endif %&#125; 3) VIP: 屏幕尺寸变化(响应式布局)时,评论区样式出错(内容区域宽度大于评论区),反复查找css目录关于.comments样式只找到一处,即2)中\css\_common\components\comments.styl,因此采用用户定义样式覆盖原样式(在浏览器中调节屏幕宽度,从而得出合适参数)media放在此处不生效1234567891011121314151617181920/*原样式*/.comments &#123; margin: 60px 20px 0; &#125;/*温馨提示*/.comments-warn &#123; color: #00FF7F; margin-top: 6px; text-align: center;&#125;/*自定义覆盖原样式,浏览器调试得出合适参数.comments之前一定要有缩进,否则报错ParserError: expected "indent(缩进)", got "."*/@media (max-width: 767px) .comments &#123; margin-top: 10px; // 8 -&gt; 10 padding: 0 12px; &#125; 艾特media放在css\_custom\custom.style下方生效,(自闭了。。。PC端OK,移动端BuG啦 i)12345@media (max-width: 767px) .comments &#123; margin-top: 10px; // 8 -&gt; 10 padding: 0 12px; &#125; 6.Sidebar运行时长 1) 文件位置：/themes/next/layout/_custom/sidebar.swig(Date改为自己的哦！)123456789101112131415161718192021222324252627282930313233343536&lt;div id="days"&gt;&lt;/div&gt;&lt;script&gt;function show_date_time()&#123; window.setTimeout("show_date_time()", 1000*3600); &#123;### 定时函数 单位ms ###&#125; BirthDay=new Date("mm/dd/yyyy hh:mm:ss"); today=new Date(); timeold=(today.getTime()-BirthDay.getTime()); sectimeold=timeold/1000 secondsold=Math.floor(sectimeold); msPerDay=24*60*60*1000 e_daysold=timeold/msPerDay daysold=Math.floor(e_daysold); e_hrsold=(e_daysold-daysold)*24; hrsold=setzero(Math.floor(e_hrsold)); document.getElementById('days').innerHTML="已运行 "+daysold+" 天 "+hrsold+" 小时"; &#123;### e_minsold=(e_hrsold-hrsold)*60; ###&#125; &#123;### minsold=setzero(Math.floor((e_hrsold-hrsold)*60)); ###&#125; &#123;### seconds=setzero(Math.floor((e_minsold-minsold)*60)); ###&#125; &#123;### document.getElementById('days').innerHTML= ### &#123;### "已运行 "+daysold+" 天 "+hrsold+" 小时 "+minsold+" 分 "+seconds+" 秒"; ###&#125;&#125;function setzero(i) &#123; if (i&lt;10) &#123; i="0" + i &#125;; return i;&#125;show_date_time();&lt;/script&gt; 2) 修改 /themes/next/layout/_macro/sidebar.swig(一样的不用修改)1234567891011121314151617181920 &#123;# Blogroll #&#125; &#123;% if theme.links %&#125; &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.links_layout | default('inline') &#125;&#125;"&gt; &lt;div class="links-of-blogroll-title"&gt; &lt;i class="fa fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"&gt;&lt;/i&gt; &#123;&#123; theme.links_title &#125;&#125; &lt;/div&gt; &lt;ul class="links-of-blogroll-list"&gt; &#123;% for name, link in theme.links %&#125; &lt;li class="links-of-blogroll-item"&gt; &lt;a href="&#123;&#123; link &#125;&#125;" title="&#123;&#123; name &#125;&#125;" target="_blank"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125; &lt;/ul&gt; &lt;/div&gt; &#123;% endif %&#125;+ &#123;% include '../_custom/sidebar.swig' %&#125; &lt;/div&gt; &lt;/section&gt; 3) 自定义样式： /blog/themes/next/source/css/_custom/custom.styl1234567/* 自定义的侧栏时间样式 */#days &#123; display: block; color: rgb(7, 179, 155); font-size: 13px; margin-top: 15px;&#125; 5.页面右上角Github图标 Corners：http://tholman.com/github-corners/ [推荐]Ribbons：https://blog.github.com/2008-12-19-github-ribbons/ 编辑themes/next/layout/_layout.swig在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;后面加入下方内容(注意：把href改为自己的Github地址)123&lt;a href="https://your-url" class="github-corner" aria-label="View source on GitHub"&gt;&lt;svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"&gt;&lt;path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"&gt;&lt;/path&gt;&lt;path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"&gt;&lt;/path&gt;&lt;path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;` 4.评论回复邮件提醒 Valine 评论系统中的邮件提醒设置1234567891011121314/*1) 设置Leancloud：进入Leancloud-&gt;选择你的评论所存放的应用-&gt;设置-&gt;邮件模板,按下图设置好用于重置密码的邮件主题&gt;然后保存:&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;/p&gt;&lt;p&gt;你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：&lt;/p&gt;&lt;p&gt;&lt;a href="你的网址首页链接" style="display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;"&gt;马上查看&lt;/a&gt;&lt;/p&gt;2) 初始化Valine：设置Valine的notify为true即可打开邮件提醒。v1.1.4-rc以后的版本支持。注意：发送次数过多，可能会暂时被Leancloud 屏蔽邮件发送功能注意：由于邮件提醒功能使用的Leancloud的密码重置邮件提醒，只能传递昵称、邮箱两个属性，所以邮件提醒链接无法直达指定文章页。请悉知。*/ 3.网页标题崩溃搞怪特效 1) 先创建一个js文件crash_cheat.js,然后把文件放到source文件夹的js文件夹的src里面2) 在hexo\themes\next\layout文件路径找到_layout.swig文件,在body或head之间加入/js/src/crash_cheat.js1234//写作时,非代码部分注意路径书写,标签书写...//破坏格式(路径前加~, 标签不加&lt;&gt;, 否则会被错误解析成link和不完整的代码导致无法正常显示)//javascript注释方法为 / / / * * / 注意:js文件中不要加script标签 1234567891011121314151617181920212223242526272829303132var OriginTitle = document.title;var titleTime;document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; document.title = '╭(°A°`)╮ 页面崩溃啦 ~'; clearTimeout(titleTime); &#125;else &#123; document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125;&#125;); &lt;!--崩溃欺骗(包含图标改变)--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "https://i.loli.net/2018/08/24/5b7fcb00ed9bf.png"); document.title = '怎么回事╭(°A°`)╮'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "https://i.loli.net/2018/09/25/5baa4f21661e7.png"); document.title = '小老弟(ฅ&gt;ω&lt;*ฅ)'; titleTime = setTimeout(function () &#123; document.title = OriginTitle; $('[rel="icon"]').attr('href', "/images/favicon-32x32-next.png"); &#125;, 2000); &#125; &#125;); 2.代码复制功能 1) 下载 clipboard.min.js,拷贝到\themes\next\source\js\src目录下2) 在\themes\next\source\js\src目录下，创建clipboard-use.js,文件内容如下:1234567891011121314151617/*页面载入完成后，创建复制按钮*/!function (e, t, a) &#123; /* code */ var initCopyCode = function()&#123; var copyHtml = ''; copyHtml += '&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'; copyHtml += ' &lt;i class="fa fa-globe"&gt;&lt;/i&gt;&lt;span&gt;复制&lt;/span&gt;'; copyHtml += '&lt;/button&gt;'; $(".highlight .code pre").before(copyHtml); new ClipboardJS('.btn-copy', &#123; target: function(trigger) &#123; return trigger.nextElementSibling; &#125; &#125;); &#125; initCopyCode();&#125;(window, document); 3) 在\themes\next\source\css\_custom\custom.styl样式文件中添加下面代码:1234567891011121314151617181920212223242526272829303132333435363738/*代码块复制按钮*/.highlight &#123; position: relative; /*方便copy代码按钮（btn-copy）的定位*/&#125;.btn-copy &#123; display: inline-block; cursor: pointer; background-color: #eee; background-image: linear-gradient(#fcfcfc,#eee); border: 1px solid #d5d5d5; border-radius: 3px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-appearance: none; font-size: 13px; font-weight: 700; line-height: 20px; color: #333; -webkit-transition: opacity .3s ease-in-out; -o-transition: opacity .3s ease-in-out; transition: opacity .3s ease-in-out; padding: 2px 6px; position: absolute; right: 5px; top: 5px; opacity: 0;&#125;.btn-copy span &#123; margin-left: 5px;&#125;.highlight:hover .btn-copy&#123; opacity: 1;&#125; 4) 添加引用,在\themes\next\layout\_layout.swig文件末尾或body结束标签之前添加123&lt;!-- 代码块复制功能 --&gt; &lt;script type="text/javascript" src="/js/src/clipboard.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/clipboard-use.js"&gt;&lt;/script&gt; 1.页面点击出现桃心 1) 在\themes\next\source\js\src下新建文件love.js文件,代码如下:1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125; &#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125; &#125;(),n()&#125;(window,document); 2) 修改themes\next\layout\_layout.swig,在&lt;body&gt;&lt;/body&gt;标签里添加:12&lt;!-- 爆炸红心效果 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 美化 10.关于css样式修改总结 首先熟悉Hexo文件目录结构,了解各component的名称 通过浏览器定位元素 修改样式 如: 摘要内容与上方Title距离过大,需进行像素调整。浏览器定位元素css .posts-expand .post-meta {},尝试查看css目录文件找到\css\_common\componments\post\post-meta.styl 9.关于\css\_schemes各主题文件夹需和\css\_variables配合使用 8.背景图片和透明效果 文件位置：themes\next\source\css\ _custom\custom.styl123456789101112131415161718192021222324/*添加背景图片*/body &#123; background: url(/images/421.jpg); background-repeat: no-repeat; background-attachment: fixed; background-position: 50% 50%; background-size: cover;/*占满屏幕*/&#125;/*修改不透明度*/.main-inner &#123; opacity: 0.95;&#125;/*首页文章阴影样式*/.post &#123; -webkit-box-shadow: 0 0 14px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 14px rgba(202, 203, 204, .5); /*页面右侧内容加载完成前 阴影会有棱角*/ border-radius: 10px;&#125; 内容透明themes\next\source\css\_schemes\Pisces\_layout.styl文件.content-wrap标签下background: white修改为：background: rgba(255,255,255,0.9); //0.9是透明度 菜单栏背景themes\next\source\css\_schemes\Pisces\_layout.styl文件.header-inner标签下background: white修改为：background: rgba(255,255,255,0.9); //0.9是透明度 站点概况背景themes\next\source\css\_schemes\Pisces\_sidebar.styl文件.sidebar-inner标签下background: white修改为：background: rgba(255,255,255,0.9); //0.9是透明度 然后修改themes\next\source\css\_schemes\Pisces\_layout.styl文件.sidebar标签下background: $body-bg-color修改为：background: rgba(255,255,255,0.9); //0.9是透明度 按钮背景themes\next\source\css\_common\components\post\post-button.styl添加代码background: transparent; 卡片圆角化,透明后直角棱角会显示出来,将直角的棱角隐藏themes\next\source\css\_schemes\Pisces\_sidebar.styl文件.sidebar标签下添加代码background: rgba(255,255,255,0.01); 参考文章：https://www.jianshu.com/p/30bf702f533chttps://www.jianshu.com/p/efbeddc5eb19 7.圆形头像并旋转 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263/*author 头像样式设置*/.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 6.底部红心跳动 1) 编辑主题配置文件: icon: heart2) 编辑 /themes/next/source/css/_custom/custom.styl123456789101112131415/* 自定义页脚跳动的心样式 */@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 80, 80);&#125; 3) 编辑 /themes/next/layout/_partials/footer.swig12- &lt;span class="with-love"&gt;+ &lt;span class="with-love" id="heart"&gt; 5.hexo代码高亮(hexo配置文件 highlight属性) 1234567891011/* 代码块```顶部样式 */.highlight figcaption &#123; margin: 0em; padding: 0.5em; background: #eee; border-bottom: 1px solid #e9e9e9;&#125;.highlight figcaption a &#123; color: rgb(80, 115, 184);&#125; 4.footer cc-license(对应主题css common components footer) 3.阅读全文 圆角化(检查元素css common components button) 2.网站图标 更换(16x16 32x32 画图 主题配置文件 avatar) 1.引用样式主要用于文章摘要(图片&amp;文字) 引用样式美化方案11234567891011121314151617181920.myblockquote:before &#123; position: relative; content: "\f10d" !important; font-size: 1rem; left: 0; margin-left:-1em; color: #233; font-family: FontAwesome; /*fontello*/&#125;.myblockquote:after &#123; position: relative; content: '\f10e' !important; font-size: 1rem; float: right; top: -1rem; margin-right:-1em; color: #233; font-family: FontAwesome;&#125; 引用样式美化方案2.css可放至 ~/next/css/_custom/_custom.styl 图片位置放在 ~/source/images目录下即可12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152.myblockquote &#123; display: block; margin-block-start: 1em; margin-block-end: 1em; margin-inline-start: 40px; margin-inline-end: 40px; position: relative; margin: 40px 0; /*距离标题大小*/ padding: 0; border-left: none; /*原始引用样式左边 竖线边框*/ text-align: center;&#125;.myblockquote:before &#123; position: absolute; content: ' '; display: block; width: 100%; height: 24px; opacity: 0.2; background-repeat: no-repeat; background-position: 0 -6px; background-size: 22px 22px; top: -20px; background-image: url(../images/quote-l.svg); border-top: 1px solid #ccc;&#125;.myblockquote:after &#123; position: absolute; content: ' '; display: block; width: 100%; height: 24px; opacity: 0.2; background-repeat: no-repeat; background-position: 100% 8px; /*横向|纵向 调整*/ background-size: 22px 22px; bottom: -20px; background-image: url(../images/quote-r.svg); border-bottom: 1px solid #ccc;&#125;/* 两种样式互不影响 &lt;div class="myblockquote"&gt; 自定义引用样式 &lt;/div&gt; &gt;原始引用样式*/ Hexo博客环境搭建12$ npm install hexo-cli... 参考官方文档吧 :D 哈哈 哈 嗝~！]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next - Gemini</tag>
        <tag>美化</tag>
        <tag>功能增强</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[all categories]]></title>
    <url>%2Fall%20categories%2F</url>
    <content type="text"><![CDATA[摘要 categories维护 categories 之初-Java基础 之初-前端 之初-工具使用(ffmpeg) 之初-框架(Spring …) 之初-安全认证(OAuth …) 之初-加密(MD5 SHA SRA …) 之初-网络 协议… 之初-数据库 之初-服务器(Tomcat Nginx …) 之初-Linux 之初-算法 之初-进阶(开发模式 架构 …) 之初-常用配置文件及方法(.xml .properties…) 之初-小工具(语音转写 java执行cmd) 之初-Future(Python Go AI etc…) 之初-Others积累 之初-友链 之初-随笔]]></content>
      <categories>
        <category>所有文章分类汇总</category>
      </categories>
      <tags>
        <tag>all categories</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bat脚本编写]]></title>
    <url>%2Fbat%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99%2F</url>
    <content type="text"><![CDATA[cd D:/hexo/Blogjava -versiongcc -v 代码高亮12345678910111213141516171819202122package com.yang;import java.io.*;public class Demo &#123; public static void main(String[] args) &#123; System.out.println(line); &#125;/* [language] [title] [url] [link-text] [language] 是代码语言的名称，用来设置代码块颜色高亮，非必须； [title] 是顶部左边的说明，非必须； [url] 是顶部右边的超链接地址，非必须； [link text] 如它的字面意思，超链接的名称，非必须； 亲测这4项应该是根据空格来分隔，而不是[]，故请不要加[]， 除非如果你想写后面两个，但不想写前面两个，那么就必须加[]了， 要这样写：[] [] [url] [link text]。/* &#125;]]></content>
      <categories>
        <category>之初-Others</category>
      </categories>
      <tags>
        <tag>bat脚本编写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java I/O流]]></title>
    <url>%2FJava%20IO%E6%B5%81%2F</url>
    <content type="text"><![CDATA[参考 https://www.cnblogs.com/furaywww/p/8849850.html]]></content>
      <categories>
        <category>之初-Java基础</category>
      </categories>
      <tags>
        <tag>Java I/O流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[邮件协议]]></title>
    <url>%2F%E9%82%AE%E4%BB%B6%E5%8D%8F%E8%AE%AE%2F</url>
    <content type="text"><![CDATA[POP3 POP3是Post Office Protocol 3的简称，即邮局协议的第3个版本,它规定怎样将个人计算机连接到Internet的邮件服务器和下载电子邮件的电子协议。它是因特网电子邮件的第一个离线协议标准,POP3允许用户从服务器上把邮件存储到本地主机（即自己的计算机）上,同时删除保存在邮件服务器上的邮件，而POP3服务器则是遵循POP3协议的接收邮件服务器，用来接收电子邮件的。 SMTP SMTP的全称是“Simple Mail Transfer Protocol”，即简单邮件传输协议。它是一组用于从源地址到目的地址传输邮件的规范，通过它来控制邮件的中转方式。SMTP 协议属于 TCP/IP协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。SMTP服务器就是遵循SMTP协议的发送邮件服务器。SMTP认证，简单地说就是要求必须在提供了账户名和密码之后才可以登录 SMTP 服务器，这就使得那些垃圾邮件的散播者无可乘之机。增加SMTP认证的目的是为了使用户避免受到垃圾邮件的侵扰。 IMAP IMAP全称是Internet Mail Access Protocol，即交互式邮件存取协议，它是跟POP3类似邮件访问标准协议之一。不同的是，开启了IMAP后，您在电子邮件客户端收取的邮件仍然保留在服务器上，同时在客户端上的操作都会反馈到服务器上，如：删除邮件，标记已读等，服务器上的邮件也会做相应的动作。所以无论从浏览器登录邮箱或者客户端软件登录邮箱，看到的邮件以及状态都是一致的。]]></content>
      <categories>
        <category>之初-Others积累</category>
      </categories>
      <tags>
        <tag>POP3</tag>
        <tag>SMTP</tag>
        <tag>IMAP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python爬虫]]></title>
    <url>%2F%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[爬虫 scrapy]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里支付]]></title>
    <url>%2F%E9%98%BF%E9%87%8C%E6%94%AF%E4%BB%98%2F</url>
    <content type="text"><![CDATA[return-notify]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>阿里支付</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机器学习]]></title>
    <url>%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[损失函数决策树信息增益（比）信息熵/决策树生成&amp;剪枝ID3 C4.5]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse查看JDK源码设置]]></title>
    <url>%2FEclipse%E6%9F%A5%E7%9C%8BJDK%E6%BA%90%E7%A0%81%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[在Eclipse中查看JDK类库的源代码： 点 “window”-&gt; “Preferences” -&gt; “Java” -&gt; “Installed JRES” 此时”Installed JRES”右边是列表窗格，列出了系统中的 JRE 环境，选择你的JRE，然后点边上的 “Edit…”， 会出现一个窗口(Edit JRE) 选中rt.jar文件的这一项：“c:\program files\java\jre_1.5.0_06\lib\rt.jar”点 左边的“+” 号展开它 展开后，可以看到“Source Attachment:(none)”，点这一项，点右边的按钮“Source Attachment…”, 选择你的JDK目录下的 “src.zip”文件 一路点”ok”,结束dt.jar是关于运行环境的类库,主要是swing的包tools.jar是关于一些工具的类库rt.jar包含了jdk的基础类库，也就是你在Java doc里面看到的所有的类的class文件 参考文章 https://www.cnblogs.com/lxmyhappy/p/7084097.html]]></content>
      <categories>
        <category>之初-常用配置文件及方法</category>
      </categories>
      <tags>
        <tag>Eclipse查看JDK源码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科大讯飞-语音转写]]></title>
    <url>%2F%E7%A7%91%E5%A4%A7%E8%AE%AF%E9%A3%9E-%E8%AF%AD%E9%9F%B3%E8%BD%AC%E5%86%99%2F</url>
    <content type="text"><![CDATA[demo: https://github.zhichuwy.xxx]]></content>
      <categories>
        <category>之初-小工具</category>
      </categories>
      <tags>
        <tag>科大讯飞</tag>
        <tag>语音转写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java执行cmd命令]]></title>
    <url>%2FJava%E6%89%A7%E8%A1%8Ccmd%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Process的输出流和错误流处理(阻塞问题) https://blog.csdn.net/Dancen/article/details/7969328https://blog.csdn.net/stormych/article/details/62037579https://blog.csdn.net/mengxingyuanlove/article/details/50707746 简单使用方法1234567891011121314151617181920212223242526// 调用命令脚本语言来实现功能// 1.错误的使用方式 Runtime.getRuntime().exec("xxx");// 2.正确的使用方式:需要指定参数(命令位置;-c表示先执行第一个参数;命令) Runtime.getRuntime().exec(new String[]&#123;"/bin/sh","c","xxx"&#125;); String tempCmd = "dexp " + userName + "/" + password + "@" + hostIP + ":" + port + " FILE=" + fileName + " DIRECTORY=" + filePath + " FULL=Y"; String[] cmds = &#123; "cmd", "/c", tempCmd &#125;; if (!System.getProperties().getProperty("os.name") .toString().toUpperCase().contains("WIN")) &#123; System.out.println("not windows"); cmds = new String[] &#123; "/bin/sh", "-c", tempCmd &#125;; &#125; System.out.println(tempCmd); Process process = Runtime.getRuntime().exec(cmds); BufferedReader reader = new BufferedReader(newInputStreamReader(process.getInputStream())); String line; while ((line = reader.readLine()) != null) &#123; System.out.println(line); &#125; 具体原因未知，嗝~java -version, gcc -v等命令通过getErrorStream()读出如：hexo -help 则通过getInputStream()读出hexo s ！不可测试，无cmd命令窗口，无法关闭server！ cmd /c dir 是执行完dir命令后关闭命令窗口cmd /k dir 是执行完dir命令后不关闭命令窗口cmd /c start dir 会打开一个新窗口后执行dir指令，原窗口会关闭cmd /k start dir 会打开一个新窗口后执行dir指令，原窗口不会关闭https://blog.csdn.net/halaoda/article/details/78778477 demo(单条命令, bat, 重定向)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233package com.yang.test;import java.io.BufferedReader;import java.io.File;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.UnsupportedEncodingException;//===================并发处理===============================class StreamManage extends Thread &#123; InputStream is; String type; public StreamManage(InputStream is, String type) &#123; this.is = is; this.type = type; &#125; public void run() &#123; InputStreamReader isr = null; try &#123; isr = new InputStreamReader(is, "gbk"); &#125; catch (UnsupportedEncodingException uee) &#123; uee.printStackTrace(); &#125; BufferedReader br = new BufferedReader(isr); String line = null; try &#123; while ((line = br.readLine()) != null) &#123; if (type.equals("Error")) &#123; System.out.println("Error &gt; " + line); &#125; else &#123; System.out.println("INFO &gt; " + line); &#125; &#125; &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; try &#123; is.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125;&#125;public class CmdTest &#123; public static void main(String[] args) throws IOException &#123;// String path = "mspaint";// Runtime run = Runtime.getRuntime();// try &#123;// Process process = run.exec("cmd.exe /k start " + path);// InputStream in = process.getInputStream();// while (in.read() != -1) &#123;// System.out.println(in.read());// &#125;// in.close();// process.waitFor();// &#125; catch (Exception e) &#123;// e.printStackTrace();// &#125; // String cmd = "gcc -v"; // String[] cmdarray = &#123; "cmd", "/C", cmd &#125;; // executeCMDfile(cmdarray, "D:/hexo/Blog", "D:/a.txt"); try &#123; startMailServer(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; // 执行 .bat 文件 private static void startMailServer() throws InterruptedException &#123; Runtime rt = Runtime.getRuntime(); // 运行时系统获取 try &#123; File filePath = new File("resource\\runStart.bat"); Process proc = rt.exec(new String[] &#123; "cmd", "/K", filePath.toString() &#125;); StreamManage errorStream = new StreamManage(proc.getErrorStream(), "Error"); StreamManage outputStream = new StreamManage(proc.getInputStream(), "INFO"); errorStream.start(); outputStream.start(); proc.waitFor(); proc.destroy(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; // 在指定路径下执行命令，并将执行结果信息重定向到某一文件中 public static String executeCMDfile(String[] cmds, String dirTodoCMD, String logToFile) throws IOException &#123; try &#123; ProcessBuilder builder = new ProcessBuilder(cmds); if (dirTodoCMD != null) builder.directory(new File(dirTodoCMD)); builder.redirectErrorStream(true); builder.redirectOutput(new File(logToFile)); Process p = builder.start(); p.waitFor(); InputStream is = p.getInputStream(); BufferedReader buffer = new BufferedReader(new InputStreamReader(is)); String line = null; StringBuffer sb = new StringBuffer(); while ((line = buffer.readLine()) != null) &#123; sb.append(line); &#125; is.close(); return sb.toString(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return null; &#125;&#125;//-----------------------------------------------------------------------------package com.yang.test;import java.io.*;public class CmdTest2 &#123; public static void main(String args[]) throws IOException, InterruptedException &#123; f2(); &#125; public static void f2() throws IOException, InterruptedException &#123; int rs = 0; String[] cmds = new String[3]; cmds[0] = "cmd"; cmds[1] = "/C"; cmds[2] = "java -version"; ProcessBuilder builder = new ProcessBuilder(cmds); builder.redirectErrorStream(true); Process process = builder.start(); BufferedReader br; br = new BufferedReader(new InputStreamReader(process.getInputStream(), "gbk")); PrintWriter pw = null; FileOutputStream os = null; os = new FileOutputStream("D:\\a.txt"); if (os != null) pw = new PrintWriter(os); String line = null; while (null != (line = br.readLine())) &#123; pw.println(line); System.out.println(line); &#125; if (pw != null) pw.flush(); rs = process.waitFor(); System.out.println(rs); pw.close(); &#125; public static void f() throws IOException, InterruptedException &#123; FileOutputStream fos = new FileOutputStream("D:/a.txt"); Runtime rt = Runtime.getRuntime(); String[] cmds = new String[3]; cmds[0] = "cmd"; cmds[1] = "/C"; //cmds[2] = "java -version"; cmds[2] = "hexo s"; Process proc = rt.exec(cmds); StreamGobbler outputGobbler = new StreamGobbler(proc.getInputStream(), "INFO", fos); StreamGobbler errorGobbler = new StreamGobbler(proc.getErrorStream(), "Error"); outputGobbler.start(); errorGobbler.start(); // outputGobbler.join();// errorGobbler.join(); int exitVal = proc.waitFor(); System.out.println("ExitValue: " + exitVal); fos.flush(); fos.close(); &#125;&#125;class StreamGobbler extends Thread &#123; InputStream is; String type; OutputStream os; StreamGobbler(InputStream is, String type) &#123; this(is, type, null); &#125; StreamGobbler(InputStream is, String type, OutputStream redirect) &#123; this.is = is; this.type = type; this.os = redirect; &#125; public void run() &#123; try &#123; PrintWriter pw = null; if (os != null) pw = new PrintWriter(os); InputStreamReader isr = new InputStreamReader(is, "gbk"); BufferedReader br = new BufferedReader(isr); String line = null; while ((line = br.readLine()) != null) &#123; if (pw != null) pw.println(line); System.out.println(type + "&gt;" + line); &#125; if (pw != null) pw.flush(); &#125; catch (IOException ioe) &#123; ioe.printStackTrace(); &#125; &#125;&#125; =====1234567891011121314151617181920212223242526272829303132333435363738394041424344// https://blog.csdn.net/Dancen/article/details/7969328//并发获取Process的输出流和错误流。通过启动两个线程来并发地读取和处理输出流和错误流//Bug : getErrorStream OK &amp;&amp; getInputStream = null ???//用ProcessBuilder的redirectErrorStream()方法合并输出流和错误流public static void main(String args[]) throws InterruptedException, IOException &#123; int rs = 0; String[] cmds = new String[3]; cmds[0] = "cmd"; cmds[1] = "/C"; cmds[2] = "java -version"; ProcessBuilder builder = new ProcessBuilder(cmds); builder.redirectErrorStream(true); Process process = null; process = builder.start(); BufferedReader br = null; br = new BufferedReader(new InputStreamReader(process.getInputStream(), "gbk")); PrintWriter pw = null; FileOutputStream os = null; os = new FileOutputStream("D:\\a.txt"); if (os != null) pw = new PrintWriter(os); String line = null; while (null != (line = br.readLine())) &#123; pw.println(line); System.out.println(line); &#125; if (pw != null) pw.flush(); rs = process.waitFor(); System.out.println(rs); pw.close();&#125;]]></content>
      <categories>
        <category>之初-小工具</category>
      </categories>
      <tags>
        <tag>Java执行cmd命令</tag>
        <tag>Java执行bat脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ffmpeg]]></title>
    <url>%2Fffmpeg%2F</url>
    <content type="text"><![CDATA[安装 下载Build压缩包，解压 设置环境变量 参考文章：https://www.jianshu.com/p/ddafe46827b7 项目导入问题 26105/26100错误better重建项目 config.propertiesstore_path(ex：D:/temp/test/) src .java中音频文件位置default(“./resource/audio/xxx.wav”)local_file(“D:\path\xxx.m4a”) 常用命令ffmpeg -i xxx.mp4 -acodec copy -vn output.aac]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>视频格式转换</tag>
        <tag>音视频分离</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python]]></title>
    <url>%2FPython%2F</url>
    <content type="text"><![CDATA[环境及使用 PyCharm 密钥(截至2020.06) 1K6IXATEF43-eyJsaWNlbnNlSWQiOiJLNklYQVRFRjQzIiwibGljZW5zZWVOYW1lIjoi5o6I5p2D5Luj55CG5ZWGOiBodHRwOi8vaWRlYS5oay5jbiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNi0wNSIsInBhaWRVcFRvIjoiMjAyMC0wNi0wNCJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNi0wNSIsInBhaWRVcFRvIjoiMjAyMC0wNi0wNCJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDYtMDUiLCJwYWlkVXBUbyI6IjIwMjAtMDYtMDQifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA2LTA1IiwicGFpZFVwVG8iOiIyMDIwLTA2LTA0In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNi0wNSIsInBhaWRVcFRvIjoiMjAyMC0wNi0wNCJ9XSwiaGFzaCI6IjEzMjkyMzI4LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-KUaQi549fH96M/qU7jTvuMeq2GuedA+WppV3irI0JHlfDuhJlidK2m3yoRxitGNmimPFVUA8Dk38OzXnP29I39QDXH5VAF8VjOP0XrqdfrpaZUKpdhRaYz8r1NAwID75U4LqYCvFbazka1dCMJBFqJ2wum1+CSQhJ1O7CSchAJAbjcCRQjbU2sXOofAA2sPLi7nlJw2wrjOHzH9cOczUn11n24PE9BQ/oYGITHkzsu94i4Q90Z1jQysMtXLgM/HoLSHY2T9rKULLoh+tdMwBp9+m0VLF/R5gdkVDV/dlorrA9OEZIsSOaG+oWSen/AulKH6OXllZJoR+b/T6YYfGWg==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go]]></title>
    <url>%2FGo%2F</url>
    <content type="text"><![CDATA[环境(win10_x64 .msi 无需配置PATH) Download Go: https://golang.google.cn/dl/ IDE LiteIDE 安装MinGW 环境配置参考(win64) 12345678910111213141516171819202122工具-&gt;编辑当前环境# native compiler windows amd64GOROOT=D:\Future\Go#GOBIN=GOARCH=amd64GOOS=windowsCGO_ENABLED=1PATH=D:\NewInstall\C_ACM\Dev_Cpp\MinGW64\bin;%GOROOT%\bin;%PATH%#D:\Future\liteide\binLITEIDE_GDB=gdb64#D:\NewInstall\C_ACM\Dev_Cpp\MinGW64\binLITEIDE_MAKE=mingw32-makeLITEIDE_TERM=%COMSPEC%LITEIDE_TERMARGS=LITEIDE_EXEC=%COMSPEC%LITEIDE_EXECOPT=/C Golang（集成环境，无需配置）]]></content>
      <categories>
        <category>之初-Future</category>
      </categories>
      <tags>
        <tag>Go</tag>
        <tag>Go 环境</tag>
        <tag>Go IDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Http]]></title>
    <url>%2FHttp%2F</url>
    <content type="text"><![CDATA[Http请求GET - 从指定的资源请求数据。POST - 向指定的资源提交要被处理的数据 GET 方法请注意，查询字符串（名称/值对）是在 GET 请求的 URL 中发送的： /test/demo_form.asp?name1=value1&amp;name2=value2有关 GET 请求的其他一些注释： GET 请求可被缓存GET 请求保留在浏览器历史记录中GET 请求可被收藏为书签GET 请求不应在处理敏感数据时使用GET 请求有长度限制GET 请求只应当用于取回数据 POST 方法 请注意，查询字符串（名称/值对）是在 POST 请求的 HTTP 消息主体中发送的： POST /test/demo_form.asp HTTP/1.1Host: w3schools.comname1=value1&amp;name2=value2 有关 POST 请求的其他一些注释： POST 请求不会被缓存POST 请求不会保留在浏览器历史记录中POST 不能被收藏为书签POST 请求对数据长度没有要求 o_0 GET POST 后退按钮/刷新 无害 数据会被重新提交（浏览器应该告知用户数据会被重新提交） 书签 可收藏为书签 不可收藏为书签 缓存 能被缓存 不能缓存 编码类型 application/x-www-form-urlencoded application/x-www-form-urlencoded 或 multipart/form-data。为二进制数据使用多重编码 历史 参数保留在浏览器历史中 参数不会保存在浏览器历史中 数据长度限制 当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大长度是 2048 个字符） 无限制 数据类型限制 只允许 ASCII 字符 没有限制，也允许二进制数据 安全性 与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。在发送密码或其他敏感信息时绝不要使用 GET ！ POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中 可见性 数据在 URL 中对所有人都是可见的 数据不会显示在 URL 中]]></content>
      <categories>
        <category>之初-网络 协议...</category>
      </categories>
      <tags>
        <tag>Http</tag>
        <tag>GET</tag>
        <tag>POST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse中Tomcat启动Run配置]]></title>
    <url>%2FEclipse%E4%B8%ADTomcat%E5%90%AF%E5%8A%A8Run%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[clean tomcat7：run 报错Tomcat====服务===手动启动设置Install JRE时候选中JDK的目录，因为jdk下面也有一个jre。为什么这个可以是因为maven的eclipse插件一些功能需要使用JDK，所以使用jdk目录可以解决这个问题。https://blog.csdn.net/u011734144/article/details/51894942https://blog.csdn.net/JQ_AK47/article/details/56675411]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
        <tag>Tomcat启动Run配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OAuth认证]]></title>
    <url>%2FOAuth%E8%AE%A4%E8%AF%81%2F</url>
    <content type="text"><![CDATA[参考文章：http://]]></content>
      <categories>
        <category>之初-安全认证</category>
      </categories>
      <tags>
        <tag>OAuth认证</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mybatis逆向生成]]></title>
    <url>%2FMyBatis-Generator%2F</url>
    <content type="text"><![CDATA[使用 mybatis-generator-core：https://blog.csdn.net/qq_33811662/article/details/80532721 123&lt;!-- a对实体 &quot;serverTimezone&quot; 的引用必须以 &apos;;&apos; 分隔符结尾。 --&gt;&lt;jdbcConnection driverClass=&quot;com.mysql.cj.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/e3mall?useSSL=false&amp;amp;serverTimezone=UTC&quot; userId=&quot;root&quot; password=&quot;root_wy&quot; /&gt;]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>mybatis-generator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL 8.0]]></title>
    <url>%2FMySQL8%2F</url>
    <content type="text"><![CDATA[12345Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/test_demo?useSSL=false&amp;serverTimezone=UTC&quot;,&quot;root&quot;,&quot;password&quot;);/Class.forName(&quot;com.mysql.jdbc.Driver&quot;);//conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/test_demo&quot;,&quot;root&quot;,&quot;password&quot;);]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>MySQL 8.0 Driver</tag>
        <tag>MySQL 8.0 Connection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SVN相关]]></title>
    <url>%2FSVN%2F</url>
    <content type="text"><![CDATA[这三个软件：VisualSVN-Server Subversion TortoiseSVN 就是版本控制软件1、其中VisualSVN-Server 和 Subversion 这两个软件都是版本控制中服务器端要使用的软件，简单的理解就是所提交的代码，就会存放到安装这两个软件的电脑上，这两个软件就会自动记录所提交的一些代码另外还会保存你的历史版本以防万一你要查找以前的代码；2、其中这两个软件的功能类似，但是VisualSVN-Server 这个软件将很多配置，如添加服务等直接帮助完成了，比较好用，易上手，而Subversion 需要跟人配置一些东西，个人觉得使用第一个软件就完全可以满足要求了；3、前面那两个软件的作用是配置服务器端， 那么TortoiseSVN 这个软件的作用是什么呢？它就是客户端需要的软件了。 用这个软件就可以很方便的向服务器端提交最新修改的代码。还可以很方便的从服务器端更新最新版本的代码。另外还可以很方便的查看以前提交的代码。总的来说，这三款软件都是在软件项目管理中必须的软件，前两款软件功能类似，只是配置方法不同，而最后那个软件就是与前两款软件中任意一款搭配使用的]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>SVN</tag>
        <tag>VisualSVN-Server</tag>
        <tag>Subversion</tag>
        <tag>TortoiseSVN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse项目相关踩坑]]></title>
    <url>%2FEclipse%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3%E8%B8%A9%E5%9D%91%2F</url>
    <content type="text"><![CDATA[快捷键 Ctrl+1 回车=&gt;自动补全返回类型 maven Pagehelper maven Pagehelper版本问题：https://blog.csdn.net/qq_36004521/article/details/78578075 war打包错误 war打包错误（webapp缺少web.xml文件）=&gt;右键项目-&gt;JaveEE Tools-&gt;Generate Deployment Descriptor Stub]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
        <tag>快捷键</tag>
        <tag>maven Pagehelper</tag>
        <tag>war打包错误</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[敏捷开发]]></title>
    <url>%2F%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%2F</url>
    <content type="text"><![CDATA[敏捷开发 CodeSheep:https://www.bilibili.com/video/av57269492 认识总结：]]></content>
      <categories>
        <category>之初-进阶</category>
      </categories>
      <tags>
        <tag>敏捷开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tomcat server.xml 配置详解]]></title>
    <url>%2FTomcat-server.xml%2F</url>
    <content type="text"><![CDATA[Tomcat server.xml https://www.cnblogs.com/kismetv/p/7228274.html]]></content>
      <categories>
        <category>之初-服务器</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>server.xml</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDEA安装及使用]]></title>
    <url>%2FIDEA%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[IDEA 注册码：https://blog.csdn.net/mobiusstrip/article/details/89841038 快捷键 Ctrl+Alt+L 格式化代码]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>IDEA安装及使用</tag>
        <tag>IDEA密钥</tag>
        <tag>IDEA快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDEA导入项目(Maven Gradle)]]></title>
    <url>%2FIDEA%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE(Maven%20Gradle)%2F</url>
    <content type="text"><![CDATA[gradle：offline！！！关闭！！！WIFI网络-&gt;手机热点网络切换]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>IDEA项目导入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[postman使用]]></title>
    <url>%2Fpostman%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[参考文章：https://blog.csdn.net/fxbin123/article/details/80428216]]></content>
      <categories>
        <category>之初-工具使用</category>
      </categories>
      <tags>
        <tag>postman</tag>
        <tag>接口测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows主机无法访问Linux虚拟机(Ubuntu)上的Tomcat]]></title>
    <url>%2FWindows-Linux(Ubuntu)-Tomcat%2F</url>
    <content type="text"><![CDATA[Windows主机无法访问Linux虚拟机(Ubuntu)上的Tomcat我的配置过程（Ubuntu14.04 LTS）首先，经过一番搜索多数文章给出的配置内容包括IP配置，虚拟机防火墙和端口配置。 1.IP配置在VMware Workstation中依次点击“编辑”-&gt;”虚拟网络编辑器”-&gt;”窗体顶部的VMnet8”-&gt;”窗体中部按钮NAT模式”，查看VMnet8网络的子网IP和网关IP。 在主机网络和共享中心中更改适配器配置，找到“VMware Virtual Ethernet Adapter for VMnet8“，根据上述查看的VMnet8网络子网IP和网关IP修改IPv4属性，确保主机能够ping通虚拟机IP（查看虚拟机IP命令：# ifconfig)，此时主机应能ping通虚拟机。 2.虚拟机firewall和端口配置有文章说要把防火墙关闭，那就关闭防火墙试下。关闭防火墙时，尝试了搜索到的两种方法。 1.# ufw disable 2.# service iptables stop (命令2好像不太好使，大致了解下好像是ufw是一个简化版的iptables，基于iptables，配置比iptables简单。centos7版本使用firewalld对防火墙进行加强，不再使用原来的iptables。在我的Ubuntu中ufw和firewalld均可使用，只不过firewalld需要安装一下:# apt-get install firewalld) 防火墙关闭之后再访问Tomcat，好像还是访问失败，于是接着尝试配置端口（使用的是firewalld，在解决问题后了解ufw命令用法时，ufw命令：# ufw allow proto tcp IP1 port xxx to IP2 port xxx，和后面所述成功解决问题的方法好像类似，不过自己未尝试）。 1.安装firewalld：# apt-get install firewalld 2.开放端口（这里开放了3306端口）：# firewall-cmd –zone=public –add-port=3306/tcp 查看端口状态：# netstat -an|grep 3306 3.# iptables-save 很不幸，还是没能成功访问。 注：有些命令可能需要root权限。 3.成功解决问题 配置很简单，在VMware Workstation中进入”虚拟网络编辑器”，点击”更改设置”，进入”NAT设置“。 主机端口：在主机上访问虚拟机服务器时的访问端口，我设置的9080（在主机访问 http://localhost:9080/ 就可访问到虚拟机上的Tomcat） 虚拟机端口：Linux上Tomcat访问端口（默认8080） 注：每次打开虚拟机前需执行 # service firewalld stop(尝试解决中…) 由于我是按照文章一步一步配置的，所以此处解决问题是否与前面的配置有关自己未验证。遇到同样问题的小伙伴可以按照从后向前的顺序进行配置，如果能够尽快解决问题当然最好不过了。 参考文章：https://blog.csdn.net/zswjob126/article/details/49498217 总结 有必要好好学习Linux，掌握原理及常用命令（本次学到的命令：iptables，ufw，firewalld） 要多了解网络相关知识，如VMware中的NAT模式，桥接模式，仅主机模式的工作原理]]></content>
      <categories>
        <category>之初-Linux</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redis-xxx]]></title>
    <url>%2FRedis-xxx%2F</url>
    <content type="text"><![CDATA[Redis-一篇搞定]]></content>
      <categories>
        <category>之初-数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>Redis数据类型</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring-xxx]]></title>
    <url>%2FSpring-xxx%2F</url>
    <content type="text"><![CDATA[hexo new “Spring-入门”hexo new “SpringMVC-xxx”hexo new “SpringBoot-xxx”基本概念 etc. (知识总结提取要点)]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>IOC AOP DI</tag>
        <tag>Spring 事务管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyBatis-xxx]]></title>
    <url>%2FMyBatis-xxx%2F</url>
    <content type="text"><![CDATA[hexo new “MyBatis-generator”分页插件generatormybatis-plus]]></content>
      <categories>
        <category>之初-框架</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
        <tag>分页插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git]]></title>
    <url>%2FGit%2F</url>
    <content type="text"><![CDATA[Git使用]]></content>
      <categories>
        <category>之初-项目版本管理</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
